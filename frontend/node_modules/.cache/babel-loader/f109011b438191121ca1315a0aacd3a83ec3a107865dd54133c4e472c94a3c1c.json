{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\catastropi\\\\doomindex\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography, Button, TextField, Card, CardContent, CardMedia, AppBar, Toolbar } from \"@mui/material\";\nimport \"./App.css\";\nimport { Grid } from \"@mui/material/Grid\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport countries from \"./Countries.js\";\n// Fix Leaflet icon issue\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Disaster Cards Component\nconst DisasterCards = () => {\n  const disastersInfo = [{\n    title: \"Drought\",\n    description: \"Prolonged period of insufficient rainfall.\"\n  }, {\n    title: \"Earthquake\",\n    description: \"Sudden shaking of the ground.\"\n  }, {\n    title: \"Epidemic\",\n    description: \"Widespread occurrence of an infectious disease.\"\n  }, {\n    title: \"Extreme Temperature\",\n    description: \"Unusual and severe weather conditions.\"\n  }, {\n    title: \"Flood\",\n    description: \"Overflow of water submerging land.\"\n  }, {\n    title: \"Landslide\",\n    description: \"Earth sliding down a slope.\"\n  }, {\n    title: \"Storm\",\n    description: \"Violent disturbance of the atmosphere.\"\n  }, {\n    title: \"Wildfire\",\n    description: \"Uncontrolled fires in forests or grasslands.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: disastersInfo.map((disaster, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: \"100%\",\n          backgroundColor: \"#edf2f4\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          borderColor: \"#2b2d42\",\n          borderRadius: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          image: `/disasterImages/${disaster.title.toLowerCase()}.png`,\n          alt: disaster.title,\n          sx: {\n            objectFit: \"fit\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontFamily: \"system-ui\",\n              color: \"#ef233c\",\n              fontWeight: \"bold\",\n              textAlign: \"center\"\n            },\n            children: disaster.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: \"#2b2d42\",\n              textAlign: \"center\"\n            },\n            children: disaster.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n// Stats Panel Component\n_c = DisasterCards;\nconst StatsPanel = ({\n  data\n}) => {\n  var _stats$total_deaths, _stats$affected_popul, _stats$economic_loss;\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  const stats = data[0];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Disaster Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Total Deaths: \", ((_stats$total_deaths = stats.total_deaths) === null || _stats$total_deaths === void 0 ? void 0 : _stats$total_deaths.toLocaleString()) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Affected Population: \", ((_stats$affected_popul = stats.affected_population) === null || _stats$affected_popul === void 0 ? void 0 : _stats$affected_popul.toLocaleString()) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Economic Loss: $\", ((_stats$economic_loss = stats.economic_loss) === null || _stats$economic_loss === void 0 ? void 0 : _stats$economic_loss.toLocaleString()) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n// Historical Trends Component\n_c2 = StatsPanel;\nconst HistoricalTrends = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n\n  // Process data for the chart\n  const chartData = data.map(item => ({\n    year: item.year,\n    deaths: item.total_deaths,\n    affected: item.affected_population\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Historical Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 350,\n        height: 300,\n        data: chartData,\n        margin: {\n          top: 5,\n          right: 20,\n          bottom: 5,\n          left: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"deaths\",\n          stroke: \"#ef233c\",\n          name: \"Deaths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"affected\",\n          stroke: \"#2b2d42\",\n          name: \"Affected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n// Map Component\n_c3 = HistoricalTrends;\nconst DisasterMap = ({\n  country,\n  geoJsonData\n}) => {\n  _s();\n  const [mapCenter, setMapCenter] = useState([0, 0]);\n  const [zoom] = useState(4);\n  useEffect(() => {\n    if (geoJsonData) {\n      try {\n        const bounds = L.geoJSON(geoJsonData).getBounds();\n        setMapCenter([(bounds.getNorth() + bounds.getSouth()) / 2, (bounds.getEast() + bounds.getWest()) / 2]);\n      } catch (error) {\n        console.error('Error processing GeoJSON:', error);\n        setMapCenter([0, 0]);\n      }\n    }\n  }, [geoJsonData]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Impact Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoom,\n          style: {\n            height: '100%',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 OpenStreetMap contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), geoJsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n            data: geoJsonData,\n            style: {\n              fillColor: '#ef233c',\n              weight: 2,\n              opacity: 1,\n              color: 'white',\n              fillOpacity: 0.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App Component\n_s(DisasterMap, \"ZCcNzMuquiOXzJzhkB/4xSUe2Lc=\");\n_c4 = DisasterMap;\nconst App = () => {\n  _s2();\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [availableYears, setAvailableYears] = useState([]);\n  const [searchResults, setSearchResults] = useState(null);\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Sample data structure - replace with your actual data\n  const disasters = [{\n    label: \"Drought\"\n  }, {\n    label: \"Earthquake\"\n  }, {\n    label: \"Epidemic\"\n  }, {\n    label: \"Extreme Temperature\"\n  }, {\n    label: \"Flood\"\n  }, {\n    label: \"Landslide\"\n  }, {\n    label: \"Storm\"\n  }, {\n    label: \"Wildfire\"\n  }];\n\n  // Fetch available years when country and disaster type are selected\n  useEffect(() => {\n    const fetchAvailableYears = async () => {\n      if (!country || !disasterType) {\n        setAvailableYears([]);\n        return;\n      }\n      try {\n        const response = await axios.get('/api/available-years', {\n          params: {\n            country: country.code,\n            disasterType: disasterType.label\n          }\n        });\n\n        // Convert years to strings for Autocomplete\n        setAvailableYears(response.data.map(String));\n\n        // Reset year selection if previously selected year is not in new list\n        if (year && !response.data.includes(parseInt(year))) {\n          setYear(null);\n        }\n      } catch (error) {\n        console.error('Error fetching available years:', error);\n        setError('Failed to fetch available years');\n        setAvailableYears([]);\n      }\n    };\n    fetchAvailableYears();\n  }, [country, disasterType]);\n  const handleSearch = async () => {\n    if (!country || !disasterType || !year) return;\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch disaster data\n      const disasterResponse = await axios.get('/api/disasters', {\n        params: {\n          country: country.code,\n          year,\n          type: disasterType.label\n        }\n      });\n\n      // Fetch GeoJSON data\n      const geoJsonResponse = await axios.get(`/api/geojson/${country.code.toLowerCase()}`);\n      setSearchResults(disasterResponse.data);\n      setGeoJsonData(geoJsonResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch disaster data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: \"#2b2d42\",\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          sx: {\n            flexGrow: 1,\n            textAlign: 'center',\n            fontFamily: \"DisplayFont\",\n            color: \"#edf2f4\"\n          },\n          children: \"DoomIndex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"Welcome to DoomIndex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4\n      },\n      children: \"DoomIndex is your comprehensive platform for accessing and understanding disaster-related information from across the globe. This interactive tool merges historical disaster data with advanced AI technology to offer valuable insights and enhance disaster response and preparedness.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"Key Features\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Advanced disaster search and filtering capabilities \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" AI-powered disaster summaries and analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Real-time public information updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Interactive disaster response chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Educational resources and preparedness guides\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"What You Can Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Search and explore historical disaster data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Gain detailed insights about specific disasters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Access preparedness and response plans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Engage with our AI-powered chatbot for disaster-related queries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Learn about disaster prevention and preparedness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"How It Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4\n      },\n      children: \"The DoomIndex dashboard utilizes cutting-edge AI technology powered by Google's Gemini to analyze disaster data and deliver meaningful insights. Simply search for a disaster by country, year, or type, and instantly access comprehensive information, including summaries, public updates, response plans, and educational content. Our interactive chatbot is available to answer your specific questions about any disaster in our database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4\n      },\n      children: \"Data is sourced from verified global disaster databases and processed in real-time to ensure the most up-to-date and relevant information. In case of an emergency, please always contact your local emergency services first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisasterCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: countries,\n          value: country,\n          onChange: (_, newValue) => {\n            setCountry(newValue);\n            setYear(null); // Reset year when country changes\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Country\",\n            variant: \"outlined\",\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#edf2f4'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: disasters,\n          value: disasterType,\n          onChange: (_, newValue) => {\n            setDisasterType(newValue);\n            setYear(null); // Reset year when disaster type changes\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Disaster Type\",\n            variant: \"outlined\",\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#edf2f4'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: availableYears,\n          value: year,\n          onChange: (_, newValue) => setYear(newValue),\n          disabled: !country || !disasterType,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Year\",\n            variant: \"outlined\",\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#edf2f4'\n              }\n            },\n            helperText: !country || !disasterType ? \"Select country and disaster type first\" : availableYears.length === 0 ? \"No years available\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSearch,\n          disabled: !country || !disasterType || !year || loading,\n          sx: {\n            borderRadius: '30px',\n            backgroundColor: '#ef233c',\n            color: '#edf2f4',\n            padding: '15px 30px',\n            '&:hover': {\n              backgroundColor: '#d90429'\n            },\n            '&:disabled': {\n              backgroundColor: '#8d99ae'\n            }\n          },\n          children: loading ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 9\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(DisasterMap, {\n          country: country,\n          geoJsonData: geoJsonData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(StatsPanel, {\n          data: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(HistoricalTrends, {\n          data: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        backgroundColor: \"#2b2d42\",\n        color: \"#edf2f4\",\n        padding: \"20px\",\n        marginTop: \"40px\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"Contact: info@doomindex.com | \\xA9 2024 DoomIndex. All Rights Reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"kRKiE5DVDRJXNqKkhoxOoKdaQvw=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DisasterCards\");\n$RefreshReg$(_c2, \"StatsPanel\");\n$RefreshReg$(_c3, \"HistoricalTrends\");\n$RefreshReg$(_c4, \"DisasterMap\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Button","TextField","Card","CardContent","CardMedia","AppBar","Toolbar","Grid","Autocomplete","axios","MapContainer","TileLayer","GeoJSON","L","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","countries","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","DisasterCards","disastersInfo","title","description","container","spacing","children","map","disaster","index","item","xs","sm","md","sx","height","backgroundColor","display","flexDirection","borderColor","borderRadius","component","image","toLowerCase","alt","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","variant","fontFamily","color","fontWeight","textAlign","_c","StatsPanel","data","_stats$total_deaths","_stats$affected_popul","_stats$economic_loss","length","p","stats","mb","total_deaths","toLocaleString","affected_population","economic_loss","_c2","HistoricalTrends","chartData","year","deaths","affected","width","margin","top","right","bottom","left","strokeDasharray","dataKey","type","stroke","name","_c3","DisasterMap","country","geoJsonData","_s","mapCenter","setMapCenter","zoom","bounds","geoJSON","getBounds","getNorth","getSouth","getEast","getWest","error","console","style","center","url","attribution","fillColor","weight","opacity","fillOpacity","_c4","App","_s2","setCountry","setYear","disasterType","setDisasterType","availableYears","setAvailableYears","searchResults","setSearchResults","setGeoJsonData","loading","setLoading","setError","disasters","label","fetchAvailableYears","response","get","params","code","String","includes","parseInt","handleSearch","disasterResponse","geoJsonResponse","maxWidth","position","mt","options","value","onChange","_","newValue","renderInput","disabled","helperText","onClick","padding","marginTop","_c5","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/catastropi/doomindex/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Button,\n  TextField,\n  Card,\n  CardContent,\n  CardMedia,\n  AppBar,\n  Toolbar,\n} from \"@mui/material\";\nimport \"./App.css\";\nimport { Grid } from \"@mui/material/Grid\"\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nimport countries from \"./Countries.js\";\n// Fix Leaflet icon issue\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n\n// Disaster Cards Component\nconst DisasterCards = () => {\n  const disastersInfo = [\n    { title: \"Drought\", description: \"Prolonged period of insufficient rainfall.\" },\n    { title: \"Earthquake\", description: \"Sudden shaking of the ground.\" },\n    { title: \"Epidemic\", description: \"Widespread occurrence of an infectious disease.\" },\n    { title: \"Extreme Temperature\", description: \"Unusual and severe weather conditions.\" },\n    { title: \"Flood\", description: \"Overflow of water submerging land.\" },\n    { title: \"Landslide\", description: \"Earth sliding down a slope.\" },\n    { title: \"Storm\", description: \"Violent disturbance of the atmosphere.\" },\n    { title: \"Wildfire\", description: \"Uncontrolled fires in forests or grasslands.\" }\n  ];\n\n  return (\n    <Grid container spacing={3}>\n      {disastersInfo.map((disaster, index) => (\n        <Grid item xs={12} sm={6} md={3} key={index}>\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundColor: \"#edf2f4\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              borderColor: \"#2b2d42\",\n              borderRadius: 4,\n            }}\n          >\n            <CardMedia\n              component=\"img\"\n              image={`/disasterImages/${disaster.title.toLowerCase()}.png`}\n              alt={disaster.title}\n              sx={{ objectFit: \"fit\" }}\n            />\n            <CardContent sx={{ flexGrow: 1 }}>\n              <Typography\n                variant=\"h6\"\n                sx={{\n                  fontFamily: \"system-ui\",\n                  color: \"#ef233c\",\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                }}\n              >\n                {disaster.title}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                sx={{ color: \"#2b2d42\", textAlign: \"center\" }}\n              >\n                {disaster.description}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\n// Stats Panel Component\nconst StatsPanel = ({ data }) => {\n  if (!data || data.length === 0) {\n    return (\n      <Card sx={{ height: '100%', p: 2 }}>\n        <Typography>No data available</Typography>\n      </Card>\n    );\n  }\n\n  const stats = data[0];\n\n  return (\n    <Card sx={{ height: '100%', p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>Disaster Statistics</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              Total Deaths: {stats.total_deaths?.toLocaleString() || 'N/A'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              Affected Population: {stats.affected_population?.toLocaleString() || 'N/A'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              Economic Loss: ${stats.economic_loss?.toLocaleString() || 'N/A'}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Historical Trends Component\nconst HistoricalTrends = ({ data }) => {\n  if (!data || data.length === 0) return null;\n\n  // Process data for the chart\n  const chartData = data.map(item => ({\n    year: item.year,\n    deaths: item.total_deaths,\n    affected: item.affected_population,\n  }));\n\n  return (\n    <Card sx={{ height: '100%', p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>Historical Trends</Typography>\n        <LineChart width={350} height={300} data={chartData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"year\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"#ef233c\" name=\"Deaths\" />\n          <Line type=\"monotone\" dataKey=\"affected\" stroke=\"#2b2d42\" name=\"Affected\" />\n        </LineChart>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Map Component\nconst DisasterMap = ({ country, geoJsonData }) => {\n  const [mapCenter, setMapCenter] = useState([0, 0]);\n  const [zoom] = useState(4);\n\n  useEffect(() => {\n    if (geoJsonData) {\n      try {\n        const bounds = L.geoJSON(geoJsonData).getBounds();\n        setMapCenter([\n          (bounds.getNorth() + bounds.getSouth()) / 2,\n          (bounds.getEast() + bounds.getWest()) / 2\n        ]);\n      } catch (error) {\n        console.error('Error processing GeoJSON:', error);\n        setMapCenter([0, 0]);\n      }\n    }\n  }, [geoJsonData]);\n\n  return (\n    <Card sx={{ height: '100%', p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>Impact Map</Typography>\n        <div style={{ height: '400px', width: '100%' }}>\n          <MapContainer\n            center={mapCenter}\n            zoom={zoom}\n            style={{ height: '100%', width: '100%' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; OpenStreetMap contributors'\n            />\n            {geoJsonData && (\n              <GeoJSON\n                data={geoJsonData}\n                style={{\n                  fillColor: '#ef233c',\n                  weight: 2,\n                  opacity: 1,\n                  color: 'white',\n                  fillOpacity: 0.7\n                }}\n              />\n            )}\n          </MapContainer>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Main App Component\nconst App = () => {\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [availableYears, setAvailableYears] = useState([]);\n  const [searchResults, setSearchResults] = useState(null);\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Sample data structure - replace with your actual data\n  const disasters = [\n    { label: \"Drought\" },\n    { label: \"Earthquake\" },\n    { label: \"Epidemic\" },\n    { label: \"Extreme Temperature\" },\n    { label: \"Flood\" },\n    { label: \"Landslide\" },\n    { label: \"Storm\" },\n    { label: \"Wildfire\" },\n  ];\n\n  // Fetch available years when country and disaster type are selected\n  useEffect(() => {\n    const fetchAvailableYears = async () => {\n      if (!country || !disasterType) {\n        setAvailableYears([]);\n        return;\n      }\n\n      try {\n        const response = await axios.get('/api/available-years', {\n          params: {\n            country: country.code,\n            disasterType: disasterType.label\n          }\n        });\n\n        // Convert years to strings for Autocomplete\n        setAvailableYears(response.data.map(String));\n        \n        // Reset year selection if previously selected year is not in new list\n        if (year && !response.data.includes(parseInt(year))) {\n          setYear(null);\n        }\n      } catch (error) {\n        console.error('Error fetching available years:', error);\n        setError('Failed to fetch available years');\n        setAvailableYears([]);\n      }\n    };\n\n    fetchAvailableYears();\n  }, [country, disasterType]);\n\n  const handleSearch = async () => {\n    if (!country || !disasterType || !year) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Fetch disaster data\n      const disasterResponse = await axios.get('/api/disasters', {\n        params: {\n          country: country.code,\n          year,\n          type: disasterType.label\n        }\n      });\n\n      // Fetch GeoJSON data\n      const geoJsonResponse = await axios.get(`/api/geojson/${country.code.toLowerCase()}`);\n\n      setSearchResults(disasterResponse.data);\n      setGeoJsonData(geoJsonResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch disaster data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n           <AppBar position=\"static\" sx={{ backgroundColor: \"#2b2d42\", mb: 4 }}>\n        <Toolbar>\n          <Typography\n            variant=\"h2\"\n            sx={{\n              flexGrow: 1,\n              textAlign: 'center',\n              fontFamily: \"DisplayFont\",\n              color: \"#edf2f4\",\n            }}\n          >\n            DoomIndex\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>\n        Welcome to DoomIndex\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n      DoomIndex is your comprehensive platform for accessing and understanding disaster-related information from across the globe. This interactive tool merges historical disaster data with advanced AI technology to offer valuable insights and enhance disaster response and preparedness.\n      </Typography>\n\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>\n      Key Features\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n        <ul>\n      <li> Advanced disaster search and filtering capabilities </li>\n      <li> AI-powered disaster summaries and analysis</li>\n      <li> Real-time public information updates</li>\n      <li> Interactive disaster response chatbot</li>\n      <li> Educational resources and preparedness guides</li>\n      </ul>\n      </Typography>\n\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>\n      What You Can Do\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n      <ul>\n    <li>Search and explore historical disaster data</li>\n    <li>Gain detailed insights about specific disasters</li>\n    <li>Access preparedness and response plans</li>\n    <li>Engage with our AI-powered chatbot for disaster-related queries</li>\n    <li>Learn about disaster prevention and preparedness</li>\n  </ul>\n      </Typography>\n\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>\n      How It Works\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n      The DoomIndex dashboard utilizes cutting-edge AI technology powered by Google's Gemini to analyze disaster data and deliver meaningful insights. Simply search for a disaster by country, year, or type, and instantly access comprehensive information, including summaries, public updates, response plans, and educational content. Our interactive chatbot is available to answer your specific questions about any disaster in our database.\n      </Typography>\n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n      Data is sourced from verified global disaster databases and processed in real-time to ensure the most up-to-date and relevant information. In case of an emergency, please always contact your local emergency services first.\n      </Typography>\n\n      <DisasterCards />\n\n      <Grid container spacing={2} sx={{ mt: 4, mb: 4 }}>\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={countries}\n            value={country}\n            onChange={(_, newValue) => {\n              setCountry(newValue);\n              setYear(null); // Reset year when country changes\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Country\"\n                variant=\"outlined\"\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    borderRadius: '30px',\n                    backgroundColor: '#edf2f4',\n                  }\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={disasters}\n            value={disasterType}\n            onChange={(_, newValue) => {\n              setDisasterType(newValue);\n              setYear(null); // Reset year when disaster type changes\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Disaster Type\"\n                variant=\"outlined\"\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    borderRadius: '30px',\n                    backgroundColor: '#edf2f4',\n                  }\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={availableYears}\n            value={year}\n            onChange={(_, newValue) => setYear(newValue)}\n            disabled={!country || !disasterType}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Year\"\n                variant=\"outlined\"\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    borderRadius: '30px',\n                    backgroundColor: '#edf2f4',\n                  }\n                }}\n                helperText={\n                  !country || !disasterType \n                    ? \"Select country and disaster type first\" \n                    : availableYears.length === 0 \n                    ? \"No years available\" \n                    : \"\"\n                }\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n          <Button\n            variant=\"contained\"\n            onClick={handleSearch}\n            disabled={!country || !disasterType || !year || loading}\n            sx={{\n              borderRadius: '30px',\n              backgroundColor: '#ef233c',\n              color: '#edf2f4',\n              padding: '15px 30px',\n              '&:hover': {\n                backgroundColor: '#d90429',\n              },\n              '&:disabled': {\n                backgroundColor: '#8d99ae',\n              },\n            }}\n          >\n            {loading ? 'Searching...' : 'Search'}\n          </Button>\n        </Grid>\n      </Grid>\n\n      \n      {error && (\n        <Typography color=\"error\" sx={{ mt: 2, mb: 2 }}>\n          {error}\n        </Typography>\n      )}\n\n      {searchResults && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <DisasterMap country={country} geoJsonData={geoJsonData} />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <StatsPanel data={searchResults} />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <HistoricalTrends data={searchResults} />\n          </Grid>\n        </Grid>\n      )}\n\n      <footer style={{\n        backgroundColor: \"#2b2d42\",\n        color: \"#edf2f4\",\n        padding: \"20px\",\n        marginTop: \"40px\",\n        textAlign: \"center\"\n      }}>\n        <Typography variant=\"body2\">\n          Contact: info@doomindex.com | © 2024 DoomIndex. All Rights Reserved.\n        </Typography>\n      </footer>\n    </Container>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}