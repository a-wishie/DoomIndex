{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\catastropi\\\\doomindex\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Typography, Button, TextField, Card, CardContent, CardMedia, AppBar, Toolbar, Link } from \"@mui/material\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport Typewriter from \"typewriter-effect\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Ensure Leaflet styles are loaded\n\n// Disaster Cards Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisasterCards = () => {\n  const disastersInfo = [{\n    title: \"Earthquake\",\n    description: \"Sudden shaking of the ground.\"\n  }, {\n    title: \"Flood\",\n    description: \"Overflow of water submerging land.\"\n  }, {\n    title: \"Tsunami\",\n    description: \"Large ocean waves caused by seismic activity.\"\n  }, {\n    title: \"Hurricane\",\n    description: \"Tropical storms with strong winds and rain.\"\n  }, {\n    title: \"Wildfire\",\n    description: \"Uncontrolled fires in forests or grasslands.\"\n  }, {\n    title: \"Drought\",\n    description: \"Prolonged period of insufficient rainfall.\"\n  }, {\n    title: \"Landslide\",\n    description: \"Earth sliding down a slope.\"\n  }, {\n    title: \"Volcanic Eruption\",\n    description: \"Eruption of lava, ash, and gases.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: disastersInfo.map((disaster, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: `https://via.placeholder.com/150?text=${disaster.title}`,\n          alt: disaster.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: disaster.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: disaster.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// Country Map Component\n_c = DisasterCards;\nconst CountryMap = ({\n  countryCode\n}) => {\n  _s();\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  useEffect(() => {\n    if (countryCode) {\n      // Fetch GeoJSON data for the selected country\n      axios.get(`https://raw.githubusercontent.com/datasets/geo-boundaries-world-110m/master/countries/${countryCode}.geojson`).then(response => {\n        setGeoJsonData(response.data);\n      }).catch(error => {\n        console.error(\"Failed to fetch GeoJSON data:\", error);\n      });\n    }\n  }, [countryCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    children: geoJsonData ? /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geoJsonData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryMap, \"Ifl/AKJWIeNfysl5PFAQWCy+4d0=\");\n_c2 = CountryMap;\nconst App = () => {\n  _s2();\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  const years = Array.from({\n    length: 53\n  }, (_, i) => (1970 + i).toString());\n  const countries = [{\n    code: 'AD',\n    label: 'Andorra'\n  }, {\n    code: 'AE',\n    label: 'United Arab Emirates'\n  }, {\n    code: 'AF',\n    label: 'Afghanistan'\n  }, {\n    code: 'AG',\n    label: 'Antigua and Barbuda'\n  }, {\n    code: 'AI',\n    label: 'Anguilla'\n  }, {\n    code: 'AL',\n    label: 'Albania'\n  }, {\n    code: 'AM',\n    label: 'Armenia'\n  }, {\n    code: 'AO',\n    label: 'Angola'\n  }, {\n    code: 'AQ',\n    label: 'Antarctica'\n  }, {\n    code: 'AR',\n    label: 'Argentina'\n  }, {\n    code: 'AS',\n    label: 'American Samoa'\n  }, {\n    code: 'AT',\n    label: 'Austria'\n  }, {\n    code: 'AU',\n    label: 'Australia',\n    suggested: true\n  }, {\n    code: 'AW',\n    label: 'Aruba'\n  }, {\n    code: 'AX',\n    label: 'Alland Islands'\n  }, {\n    code: 'AZ',\n    label: 'Azerbaijan'\n  }, {\n    code: 'BA',\n    label: 'Bosnia and Herzegovina'\n  }, {\n    code: 'BB',\n    label: 'Barbados'\n  }, {\n    code: 'BD',\n    label: 'Bangladesh'\n  }, {\n    code: 'BE',\n    label: 'Belgium'\n  }, {\n    code: 'BF',\n    label: 'Burkina Faso'\n  }, {\n    code: 'BG',\n    label: 'Bulgaria'\n  }, {\n    code: 'BH',\n    label: 'Bahrain'\n  }, {\n    code: 'BI',\n    label: 'Burundi'\n  }, {\n    code: 'BJ',\n    label: 'Benin'\n  }, {\n    code: 'BL',\n    label: 'Saint Barthelemy'\n  }, {\n    code: 'BM',\n    label: 'Bermuda'\n  }, {\n    code: 'BN',\n    label: 'Brunei Darussalam'\n  }, {\n    code: 'BO',\n    label: 'Bolivia'\n  }, {\n    code: 'BR',\n    label: 'Brazil'\n  }, {\n    code: 'BS',\n    label: 'Bahamas'\n  }, {\n    code: 'BT',\n    label: 'Bhutan'\n  }, {\n    code: 'BV',\n    label: 'Bouvet Island'\n  }, {\n    code: 'BW',\n    label: 'Botswana'\n  }, {\n    code: 'BY',\n    label: 'Belarus'\n  }, {\n    code: 'BZ',\n    label: 'Belize'\n  }, {\n    code: 'CA',\n    label: 'Canada',\n    suggested: true\n  }, {\n    code: 'CC',\n    label: 'Cocos (Keeling) Islands'\n  }, {\n    code: 'CD',\n    label: 'Congo, Democratic Republic of the'\n  }, {\n    code: 'CF',\n    label: 'Central African Republic'\n  }, {\n    code: 'CG',\n    label: 'Congo, Republic of the'\n  }, {\n    code: 'CH',\n    label: 'Switzerland'\n  }, {\n    code: 'CI',\n    label: \"Cote d'Ivoire\"\n  }, {\n    code: 'CK',\n    label: 'Cook Islands'\n  }, {\n    code: 'CL',\n    label: 'Chile'\n  }, {\n    code: 'CM',\n    label: 'Cameroon'\n  }, {\n    code: 'CN',\n    label: 'China'\n  }, {\n    code: 'CO',\n    label: 'Colombia'\n  }, {\n    code: 'CR',\n    label: 'Costa Rica'\n  }, {\n    code: 'CU',\n    label: 'Cuba'\n  }, {\n    code: 'CV',\n    label: 'Cape Verde'\n  }, {\n    code: 'CW',\n    label: 'Curacao'\n  }, {\n    code: 'CX',\n    label: 'Christmas Island'\n  }, {\n    code: 'CY',\n    label: 'Cyprus'\n  }, {\n    code: 'CZ',\n    label: 'Czech Republic'\n  }, {\n    code: 'DE',\n    label: 'Germany',\n    suggested: true\n  }, {\n    code: 'DJ',\n    label: 'Djibouti'\n  }, {\n    code: 'DK',\n    label: 'Denmark'\n  }, {\n    code: 'DM',\n    label: 'Dominica'\n  }, {\n    code: 'DO',\n    label: 'Dominican Republic'\n  }, {\n    code: 'DZ',\n    label: 'Algeria'\n  }, {\n    code: 'EC',\n    label: 'Ecuador'\n  }, {\n    code: 'EE',\n    label: 'Estonia'\n  }, {\n    code: 'EG',\n    label: 'Egypt'\n  }, {\n    code: 'EH',\n    label: 'Western Sahara'\n  }, {\n    code: 'ER',\n    label: 'Eritrea'\n  }, {\n    code: 'ES',\n    label: 'Spain'\n  }, {\n    code: 'ET',\n    label: 'Ethiopia'\n  }, {\n    code: 'FI',\n    label: 'Finland'\n  }, {\n    code: 'FJ',\n    label: 'Fiji'\n  }, {\n    code: 'FK',\n    label: 'Falkland Islands (Malvinas)'\n  }, {\n    code: 'FM',\n    label: 'Micronesia, Federated States of'\n  }, {\n    code: 'FO',\n    label: 'Faroe Islands'\n  }, {\n    code: 'FR',\n    label: 'France',\n    suggested: true\n  }, {\n    code: 'GA',\n    label: 'Gabon'\n  }, {\n    code: 'GB',\n    label: 'United Kingdom'\n  }, {\n    code: 'GD',\n    label: 'Grenada'\n  }, {\n    code: 'GE',\n    label: 'Georgia'\n  }, {\n    code: 'GF',\n    label: 'French Guiana'\n  }, {\n    code: 'GG',\n    label: 'Guernsey'\n  }, {\n    code: 'GH',\n    label: 'Ghana'\n  }, {\n    code: 'GI',\n    label: 'Gibraltar'\n  }, {\n    code: 'GL',\n    label: 'Greenland'\n  }, {\n    code: 'GM',\n    label: 'Gambia'\n  }, {\n    code: 'GN',\n    label: 'Guinea'\n  }, {\n    code: 'GP',\n    label: 'Guadeloupe'\n  }, {\n    code: 'GQ',\n    label: 'Equatorial Guinea'\n  }, {\n    code: 'GR',\n    label: 'Greece'\n  }, {\n    code: 'GS',\n    label: 'South Georgia and the South Sandwich Islands'\n  }, {\n    code: 'GT',\n    label: 'Guatemala'\n  }, {\n    code: 'GU',\n    label: 'Guam'\n  }, {\n    code: 'GW',\n    label: 'Guinea-Bissau'\n  }, {\n    code: 'GY',\n    label: 'Guyana'\n  }, {\n    code: 'HK',\n    label: 'Hong Kong'\n  }, {\n    code: 'HM',\n    label: 'Heard Island and McDonald Islands'\n  }, {\n    code: 'HN',\n    label: 'Honduras'\n  }, {\n    code: 'HR',\n    label: 'Croatia'\n  }, {\n    code: 'HT',\n    label: 'Haiti'\n  }, {\n    code: 'HU',\n    label: 'Hungary'\n  }, {\n    code: 'ID',\n    label: 'Indonesia'\n  }, {\n    code: 'IE',\n    label: 'Ireland'\n  }, {\n    code: 'IL',\n    label: 'Israel'\n  }, {\n    code: 'IM',\n    label: 'Isle of Man'\n  }, {\n    code: 'IN',\n    label: 'India'\n  }, {\n    code: 'IO',\n    label: 'British Indian Ocean Territory'\n  }, {\n    code: 'IQ',\n    label: 'Iraq'\n  }, {\n    code: 'IR',\n    label: 'Iran, Islamic Republic of'\n  }, {\n    code: 'IS',\n    label: 'Iceland'\n  }, {\n    code: 'IT',\n    label: 'Italy'\n  }, {\n    code: 'JE',\n    label: 'Jersey'\n  }, {\n    code: 'JM',\n    label: 'Jamaica'\n  }, {\n    code: 'JO',\n    label: 'Jordan'\n  }, {\n    code: 'JP',\n    label: 'Japan',\n    suggested: true\n  }, {\n    code: 'KE',\n    label: 'Kenya'\n  }, {\n    code: 'KG',\n    label: 'Kyrgyzstan'\n  }, {\n    code: 'KH',\n    label: 'Cambodia'\n  }, {\n    code: 'KI',\n    label: 'Kiribati'\n  }, {\n    code: 'KM',\n    label: 'Comoros'\n  }, {\n    code: 'KN',\n    label: 'Saint Kitts and Nevis'\n  }, {\n    code: 'KP',\n    label: \"Korea, Democratic People's Republic of\"\n  }, {\n    code: 'KR',\n    label: 'Korea, Republic of'\n  }, {\n    code: 'KW',\n    label: 'Kuwait'\n  }, {\n    code: 'KY',\n    label: 'Cayman Islands'\n  }, {\n    code: 'KZ',\n    label: 'Kazakhstan'\n  }, {\n    code: 'LA',\n    label: \"Lao People's Democratic Republic\"\n  }, {\n    code: 'LB',\n    label: 'Lebanon'\n  }, {\n    code: 'LC',\n    label: 'Saint Lucia'\n  }, {\n    code: 'LI',\n    label: 'Liechtenstein'\n  }, {\n    code: 'LK',\n    label: 'Sri Lanka'\n  }, {\n    code: 'LR',\n    label: 'Liberia'\n  }, {\n    code: 'LS',\n    label: 'Lesotho'\n  }, {\n    code: 'LT',\n    label: 'Lithuania'\n  }, {\n    code: 'LU',\n    label: 'Luxembourg'\n  }, {\n    code: 'LV',\n    label: 'Latvia'\n  }, {\n    code: 'LY',\n    label: 'Libya'\n  }, {\n    code: 'MA',\n    label: 'Morocco'\n  }, {\n    code: 'MC',\n    label: 'Monaco'\n  }, {\n    code: 'MD',\n    label: 'Moldova, Republic of'\n  }, {\n    code: 'ME',\n    label: 'Montenegro'\n  }, {\n    code: 'MF',\n    label: 'Saint Martin (French part)'\n  }, {\n    code: 'MG',\n    label: 'Madagascar'\n  }, {\n    code: 'MH',\n    label: 'Marshall Islands'\n  }, {\n    code: 'MK',\n    label: 'Macedonia, the Former Yugoslav Republic of'\n  }, {\n    code: 'ML',\n    label: 'Mali'\n  }, {\n    code: 'MM',\n    label: 'Myanmar'\n  }, {\n    code: 'MN',\n    label: 'Mongolia'\n  }, {\n    code: 'MO',\n    label: 'Macao'\n  }, {\n    code: 'MP',\n    label: 'Northern Mariana Islands'\n  }, {\n    code: 'MQ',\n    label: 'Martinique'\n  }, {\n    code: 'MR',\n    label: 'Mauritania'\n  }, {\n    code: 'MS',\n    label: 'Montserrat'\n  }, {\n    code: 'MT',\n    label: 'Malta'\n  }, {\n    code: 'MU',\n    label: 'Mauritius'\n  }, {\n    code: 'MV',\n    label: 'Maldives'\n  }, {\n    code: 'MW',\n    label: 'Malawi'\n  }, {\n    code: 'MX',\n    label: 'Mexico'\n  }, {\n    code: 'MY',\n    label: 'Malaysia'\n  }, {\n    code: 'MZ',\n    label: 'Mozambique'\n  }, {\n    code: 'NA',\n    label: 'Namibia'\n  }, {\n    code: 'NC',\n    label: 'New Caledonia'\n  }, {\n    code: 'NE',\n    label: 'Niger'\n  }, {\n    code: 'NF',\n    label: 'Norfolk Island'\n  }, {\n    code: 'NG',\n    label: 'Nigeria'\n  }, {\n    code: 'NI',\n    label: 'Nicaragua'\n  }, {\n    code: 'NL',\n    label: 'Netherlands'\n  }, {\n    code: 'NO',\n    label: 'Norway'\n  }, {\n    code: 'NP',\n    label: 'Nepal'\n  }, {\n    code: 'NR',\n    label: 'Nauru'\n  }, {\n    code: 'NU',\n    label: 'Niue'\n  }, {\n    code: 'NZ',\n    label: 'New Zealand'\n  }, {\n    code: 'OM',\n    label: 'Oman'\n  }, {\n    code: 'PA',\n    label: 'Panama'\n  }, {\n    code: 'PE',\n    label: 'Peru'\n  }, {\n    code: 'PF',\n    label: 'French Polynesia'\n  }, {\n    code: 'PG',\n    label: 'Papua New Guinea'\n  }, {\n    code: 'PH',\n    label: 'Philippines'\n  }, {\n    code: 'PK',\n    label: 'Pakistan'\n  }, {\n    code: 'PL',\n    label: 'Poland'\n  }, {\n    code: 'PM',\n    label: 'Saint Pierre and Miquelon'\n  }, {\n    code: 'PN',\n    label: 'Pitcairn'\n  }, {\n    code: 'PR',\n    label: 'Puerto Rico'\n  }, {\n    code: 'PS',\n    label: 'Palestine, State of'\n  }, {\n    code: 'PT',\n    label: 'Portugal'\n  }, {\n    code: 'PW',\n    label: 'Palau'\n  }, {\n    code: 'PY',\n    label: 'Paraguay'\n  }, {\n    code: 'QA',\n    label: 'Qatar'\n  }, {\n    code: 'RE',\n    label: 'Reunion'\n  }, {\n    code: 'RO',\n    label: 'Romania'\n  }, {\n    code: 'RS',\n    label: 'Serbia'\n  }, {\n    code: 'RU',\n    label: 'Russian Federation'\n  }, {\n    code: 'RW',\n    label: 'Rwanda'\n  }, {\n    code: 'SA',\n    label: 'Saudi Arabia'\n  }, {\n    code: 'SB',\n    label: 'Solomon Islands'\n  }, {\n    code: 'SC',\n    label: 'Seychelles'\n  }, {\n    code: 'SD',\n    label: 'Sudan'\n  }, {\n    code: 'SE',\n    label: 'Sweden'\n  }, {\n    code: 'SG',\n    label: 'Singapore'\n  }, {\n    code: 'SH',\n    label: 'Saint Helena'\n  }, {\n    code: 'SI',\n    label: 'Slovenia'\n  }, {\n    code: 'SJ',\n    label: 'Svalbard and Jan Mayen'\n  }, {\n    code: 'SK',\n    label: 'Slovakia'\n  }, {\n    code: 'SL',\n    label: 'Sierra Leone'\n  }, {\n    code: 'SM',\n    label: 'San Marino'\n  }, {\n    code: 'SN',\n    label: 'Senegal'\n  }, {\n    code: 'SO',\n    label: 'Somalia'\n  }, {\n    code: 'SR',\n    label: 'Suriname'\n  }, {\n    code: 'SS',\n    label: 'South Sudan'\n  }, {\n    code: 'ST',\n    label: 'Sao Tome and Principe'\n  }, {\n    code: 'SV',\n    label: 'El Salvador'\n  }, {\n    code: 'SX',\n    label: 'Sint Maarten (Dutch part)'\n  }, {\n    code: 'SY',\n    label: 'Syrian Arab Republic'\n  }, {\n    code: 'SZ',\n    label: 'Swaziland'\n  }, {\n    code: 'TC',\n    label: 'Turks and Caicos Islands'\n  }, {\n    code: 'TD',\n    label: 'Chad'\n  }, {\n    code: 'TF',\n    label: 'French Southern Territories'\n  }, {\n    code: 'TG',\n    label: 'Togo'\n  }, {\n    code: 'TH',\n    label: 'Thailand'\n  }, {\n    code: 'TJ',\n    label: 'Tajikistan'\n  }, {\n    code: 'TK',\n    label: 'Tokelau'\n  }, {\n    code: 'TL',\n    label: 'Timor-Leste'\n  }, {\n    code: 'TM',\n    label: 'Turkmenistan'\n  }, {\n    code: 'TN',\n    label: 'Tunisia'\n  }, {\n    code: 'TO',\n    label: 'Tonga'\n  }, {\n    code: 'TR',\n    label: 'Turkey'\n  }, {\n    code: 'TT',\n    label: 'Trinidad and Tobago'\n  }, {\n    code: 'TV',\n    label: 'Tuvalu'\n  }, {\n    code: 'TW',\n    label: 'Taiwan'\n  }, {\n    code: 'TZ',\n    label: 'United Republic of Tanzania'\n  }, {\n    code: 'UA',\n    label: 'Ukraine'\n  }, {\n    code: 'UG',\n    label: 'Uganda'\n  }, {\n    code: 'US',\n    label: 'United States',\n    suggested: true\n  }, {\n    code: 'UY',\n    label: 'Uruguay'\n  }, {\n    code: 'UZ',\n    label: 'Uzbekistan'\n  }, {\n    code: 'VA',\n    label: 'Holy See (Vatican City State)'\n  }, {\n    code: 'VC',\n    label: 'Saint Vincent and the Grenadines'\n  }, {\n    code: 'VE',\n    label: 'Venezuela'\n  }, {\n    code: 'VG',\n    label: 'British Virgin Islands'\n  }, {\n    code: 'VI',\n    label: 'US Virgin Islands'\n  }, {\n    code: 'VN',\n    label: 'Vietnam'\n  }, {\n    code: 'VU',\n    label: 'Vanuatu'\n  }, {\n    code: 'WF',\n    label: 'Wallis and Futuna'\n  }, {\n    code: 'WS',\n    label: 'Samoa'\n  }, {\n    code: 'XK',\n    label: 'Kosovo'\n  }, {\n    code: 'YE',\n    label: 'Yemen'\n  }, {\n    code: 'YT',\n    label: 'Mayotte'\n  }, {\n    code: 'ZA',\n    label: 'South Africa'\n  }, {\n    code: 'ZM',\n    label: 'Zambia'\n  }, {\n    code: 'ZW',\n    label: 'Zimbabwe'\n  }];\n  const disasters = [{\n    label: \"Drought\"\n  }, {\n    label: \"Earthquake\"\n  }, {\n    label: \"Epidemic\"\n  }, {\n    label: \"Extreme Temperature\"\n  }, {\n    label: \"Flood\"\n  }, {\n    label: \"Landslide\"\n  }, {\n    label: \"Storm\"\n  }, {\n    label: \"Wildfire\"\n  }];\n\n  // Fetch dropdown data from backend\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/api/countries\").then(response => {\n      setCountries(response.data);\n    });\n    axios.get(\"http://127.0.0.1:5000/api/disaster-types\").then(response => {\n      setDisasters(response.data);\n    });\n  }, []);\n  const handleSearch = () => {\n    if (country && year && disasterType) {\n      axios.get(\"http://127.0.0.1:5000/api/disaster\", {\n        params: {\n          country,\n          year,\n          disasterType\n        }\n      }).then(response => {\n        setSearchResults(response.data);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            flexGrow: 1\n          },\n          children: \"DoomIndex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          color: \"inherit\",\n          style: {\n            marginRight: 20\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#about\",\n          color: \"inherit\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Welcome to DoomIndex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Explore and understand disasters worldwide. Search for specific events and learn how to stay prepared.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(DisasterCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: countries,\n          value: country,\n          onChange: (e, newValue) => setCountry(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: years,\n          value: year,\n          onChange: (e, newValue) => setYear(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: disasters,\n          value: disasterType,\n          onChange: (e, newValue) => setDisasterType(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Disaster Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSearch,\n          disabled: !country || !year || !disasterType,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Country Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), country && /*#__PURE__*/_jsxDEV(CountryMap, {\n          countryCode: country.code.toLowerCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Type: \", searchResults.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Affected: \", searchResults.affectedIndividuals]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Deaths: \", searchResults.deaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Severity: \", searchResults.severity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: 20\n          },\n          children: \"Educational Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: /*#__PURE__*/_jsxDEV(Typewriter, {\n            options: {\n              strings: searchResults.educationalContent,\n              autoStart: true,\n              loop: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Public Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Preparedness: \", searchResults.publicInfo.preparedness]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Recommendations: \", searchResults.publicInfo.recommendations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"Gcob5TpQln3wq051jNBLj301Yq0=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DisasterCards\");\n$RefreshReg$(_c2, \"CountryMap\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Typography","Button","TextField","Card","CardContent","CardMedia","AppBar","Toolbar","Link","Autocomplete","axios","Typewriter","MapContainer","TileLayer","GeoJSON","jsxDEV","_jsxDEV","DisasterCards","disastersInfo","title","description","container","spacing","children","map","disaster","index","item","xs","sm","md","component","height","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","CountryMap","countryCode","_s","geoJsonData","setGeoJsonData","get","then","response","data","catch","error","console","style","width","center","zoom","url","attribution","_c2","App","_s2","country","setCountry","year","setYear","disasterType","setDisasterType","searchResults","setSearchResults","years","Array","from","length","_","i","toString","countries","code","label","suggested","disasters","setCountries","setDisasters","handleSearch","params","position","flexGrow","href","color","marginRight","align","gutterBottom","justifyContent","marginTop","options","value","onChange","e","newValue","renderInput","onClick","disabled","toLowerCase","type","affectedIndividuals","deaths","severity","strings","educationalContent","autoStart","loop","publicInfo","preparedness","recommendations","_c3","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/catastropi/doomindex/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  Button,\n  TextField,\n  Card,\n  CardContent,\n  CardMedia,\n  AppBar,\n  Toolbar,\n  Link,\n} from \"@mui/material\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport Typewriter from \"typewriter-effect\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Ensure Leaflet styles are loaded\n\n// Disaster Cards Component\nconst DisasterCards = () => {\n  const disastersInfo = [\n    { title: \"Earthquake\", description: \"Sudden shaking of the ground.\" },\n    { title: \"Flood\", description: \"Overflow of water submerging land.\" },\n    { title: \"Tsunami\", description: \"Large ocean waves caused by seismic activity.\" },\n    { title: \"Hurricane\", description: \"Tropical storms with strong winds and rain.\" },\n    { title: \"Wildfire\", description: \"Uncontrolled fires in forests or grasslands.\" },\n    { title: \"Drought\", description: \"Prolonged period of insufficient rainfall.\" },\n    { title: \"Landslide\", description: \"Earth sliding down a slope.\" },\n    { title: \"Volcanic Eruption\", description: \"Eruption of lava, ash, and gases.\" },\n  ];\n\n  return (\n    <Grid container spacing={3}>\n      {disastersInfo.map((disaster, index) => (\n        <Grid item xs={12} sm={6} md={3} key={index}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={`https://via.placeholder.com/150?text=${disaster.title}`}\n              alt={disaster.title}\n            />\n            <CardContent>\n              <Typography variant=\"h6\">{disaster.title}</Typography>\n              <Typography variant=\"body2\">{disaster.description}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\n// Country Map Component\nconst CountryMap = ({ countryCode }) => {\n  const [geoJsonData, setGeoJsonData] = useState(null);\n\n  useEffect(() => {\n    if (countryCode) {\n      // Fetch GeoJSON data for the selected country\n      axios\n        .get(`https://raw.githubusercontent.com/datasets/geo-boundaries-world-110m/master/countries/${countryCode}.geojson`)\n        .then((response) => {\n          setGeoJsonData(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Failed to fetch GeoJSON data:\", error);\n        });\n    }\n  }, [countryCode]);\n\n  return (\n    <div style={{ height: \"500px\", width: \"100%\" }}>\n      {geoJsonData ? (\n        <MapContainer center={[0, 0]} zoom={2} style={{ height: \"100%\", width: \"100%\" }}>\n          {/* Base map tiles */}\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n\n          {/* Render GeoJSON data for the selected country */}\n          <GeoJSON data={geoJsonData} />\n        </MapContainer>\n      ) : (\n        <p>Loading map...</p>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n\n  const years = Array.from({ length: 53 }, (_, i) => (1970 + i).toString());\n\n  const countries = [\n{ code: 'AD', label: 'Andorra' },\n{ code: 'AE', label: 'United Arab Emirates' },\n{ code: 'AF', label: 'Afghanistan' },\n{ code: 'AG', label: 'Antigua and Barbuda' },\n{ code: 'AI', label: 'Anguilla' },\n{ code: 'AL', label: 'Albania' },\n{ code: 'AM', label: 'Armenia' },\n{ code: 'AO', label: 'Angola' },\n{ code: 'AQ', label: 'Antarctica' },\n{ code: 'AR', label: 'Argentina' },\n{ code: 'AS', label: 'American Samoa' },\n{ code: 'AT', label: 'Austria' },\n{ code: 'AU', label: 'Australia', suggested: true },\n{ code: 'AW', label: 'Aruba' },\n{ code: 'AX', label: 'Alland Islands' },\n{ code: 'AZ', label: 'Azerbaijan' },\n{ code: 'BA', label: 'Bosnia and Herzegovina' },\n{ code: 'BB', label: 'Barbados' },\n{ code: 'BD', label: 'Bangladesh' },\n{ code: 'BE', label: 'Belgium' },\n{ code: 'BF', label: 'Burkina Faso' },\n{ code: 'BG', label: 'Bulgaria' },\n{ code: 'BH', label: 'Bahrain' },\n{ code: 'BI', label: 'Burundi' },\n{ code: 'BJ', label: 'Benin' },\n{ code: 'BL', label: 'Saint Barthelemy' },\n{ code: 'BM', label: 'Bermuda' },\n{ code: 'BN', label: 'Brunei Darussalam' },\n{ code: 'BO', label: 'Bolivia' },\n{ code: 'BR', label: 'Brazil' },\n{ code: 'BS', label: 'Bahamas' },\n{ code: 'BT', label: 'Bhutan' },\n{ code: 'BV', label: 'Bouvet Island' },\n{ code: 'BW', label: 'Botswana' },\n{ code: 'BY', label: 'Belarus' },\n{ code: 'BZ', label: 'Belize' },\n{ code: 'CA', label: 'Canada', suggested: true },\n{ code: 'CC', label: 'Cocos (Keeling) Islands' },\n{ code: 'CD', label: 'Congo, Democratic Republic of the' },\n{ code: 'CF', label: 'Central African Republic' },\n{ code: 'CG', label: 'Congo, Republic of the' },\n{ code: 'CH', label: 'Switzerland' },\n{ code: 'CI', label: \"Cote d'Ivoire\" },\n{ code: 'CK', label: 'Cook Islands' },\n{ code: 'CL', label: 'Chile' },\n{ code: 'CM', label: 'Cameroon' },\n{ code: 'CN', label: 'China' },\n{ code: 'CO', label: 'Colombia' },\n{ code: 'CR', label: 'Costa Rica' },\n{ code: 'CU', label: 'Cuba' },\n{ code: 'CV', label: 'Cape Verde' },\n{ code: 'CW', label: 'Curacao' },\n{ code: 'CX', label: 'Christmas Island' },\n{ code: 'CY', label: 'Cyprus' },\n{ code: 'CZ', label: 'Czech Republic' },\n{ code: 'DE', label: 'Germany', suggested: true },\n{ code: 'DJ', label: 'Djibouti' },\n{ code: 'DK', label: 'Denmark' },\n{ code: 'DM', label: 'Dominica' },\n{ code: 'DO', label: 'Dominican Republic' },\n{ code: 'DZ', label: 'Algeria' },\n{ code: 'EC', label: 'Ecuador' },\n{ code: 'EE', label: 'Estonia' },\n{ code: 'EG', label: 'Egypt' },\n{ code: 'EH', label: 'Western Sahara' },\n{ code: 'ER', label: 'Eritrea' },\n{ code: 'ES', label: 'Spain' },\n{ code: 'ET', label: 'Ethiopia' },\n{ code: 'FI', label: 'Finland' },\n{ code: 'FJ', label: 'Fiji' },\n{ code: 'FK', label: 'Falkland Islands (Malvinas)' },\n{ code: 'FM', label: 'Micronesia, Federated States of' },\n{ code: 'FO', label: 'Faroe Islands' },\n{ code: 'FR', label: 'France', suggested: true },\n{ code: 'GA', label: 'Gabon' },\n{ code: 'GB', label: 'United Kingdom' },\n{ code: 'GD', label: 'Grenada' },\n{ code: 'GE', label: 'Georgia' },\n{ code: 'GF', label: 'French Guiana' },\n{ code: 'GG', label: 'Guernsey' },\n{ code: 'GH', label: 'Ghana' },\n{ code: 'GI', label: 'Gibraltar' },\n{ code: 'GL', label: 'Greenland' },\n{ code: 'GM', label: 'Gambia' },\n{ code: 'GN', label: 'Guinea' },\n{ code: 'GP', label: 'Guadeloupe' },\n{ code: 'GQ', label: 'Equatorial Guinea' },\n{ code: 'GR', label: 'Greece' },\n{ code: 'GS', label: 'South Georgia and the South Sandwich Islands' },\n{ code: 'GT', label: 'Guatemala' },\n{ code: 'GU', label: 'Guam' },\n{ code: 'GW', label: 'Guinea-Bissau' },\n{ code: 'GY', label: 'Guyana' },\n{ code: 'HK', label: 'Hong Kong' },\n{ code: 'HM', label: 'Heard Island and McDonald Islands' },\n{ code: 'HN', label: 'Honduras' },\n{ code: 'HR', label: 'Croatia' },\n{ code: 'HT', label: 'Haiti' },\n{ code: 'HU', label: 'Hungary' },\n{ code: 'ID', label: 'Indonesia' },\n{ code: 'IE', label: 'Ireland' },\n{ code: 'IL', label: 'Israel' },\n{ code: 'IM', label: 'Isle of Man' },\n{ code: 'IN', label: 'India' },\n{ code: 'IO', label: 'British Indian Ocean Territory' },\n{ code: 'IQ', label: 'Iraq' },\n{ code: 'IR', label: 'Iran, Islamic Republic of' },\n{ code: 'IS', label: 'Iceland' },\n{ code: 'IT', label: 'Italy' },\n{ code: 'JE', label: 'Jersey' },\n{ code: 'JM', label: 'Jamaica' },\n{ code: 'JO', label: 'Jordan' },\n{ code: 'JP', label: 'Japan', suggested: true },\n{ code: 'KE', label: 'Kenya' },\n{ code: 'KG', label: 'Kyrgyzstan' },\n{ code: 'KH', label: 'Cambodia' },\n{ code: 'KI', label: 'Kiribati' },\n{ code: 'KM', label: 'Comoros' },\n{ code: 'KN', label: 'Saint Kitts and Nevis' },\n{ code: 'KP', label: \"Korea, Democratic People's Republic of\" },\n{ code: 'KR', label: 'Korea, Republic of' },\n{ code: 'KW', label: 'Kuwait' },\n{ code: 'KY', label: 'Cayman Islands' },\n{ code: 'KZ', label: 'Kazakhstan' },\n{ code: 'LA', label: \"Lao People's Democratic Republic\" },\n{ code: 'LB', label: 'Lebanon' },\n{ code: 'LC', label: 'Saint Lucia' },\n{ code: 'LI', label: 'Liechtenstein' },\n{ code: 'LK', label: 'Sri Lanka' },\n{ code: 'LR', label: 'Liberia' },\n{ code: 'LS', label: 'Lesotho' },\n{ code: 'LT', label: 'Lithuania' },\n{ code: 'LU', label: 'Luxembourg' },\n{ code: 'LV', label: 'Latvia' },\n{ code: 'LY', label: 'Libya' },\n{ code: 'MA', label: 'Morocco' },\n{ code: 'MC', label: 'Monaco' },\n{ code: 'MD', label: 'Moldova, Republic of' },\n{ code: 'ME', label: 'Montenegro' },\n{ code: 'MF', label: 'Saint Martin (French part)' },\n{ code: 'MG', label: 'Madagascar' },\n{ code: 'MH', label: 'Marshall Islands' },\n{ code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of' },\n{ code: 'ML', label: 'Mali' },\n{ code: 'MM', label: 'Myanmar' },\n{ code: 'MN', label: 'Mongolia' },\n{ code: 'MO', label: 'Macao' },\n{ code: 'MP', label: 'Northern Mariana Islands' },\n{ code: 'MQ', label: 'Martinique' },\n{ code: 'MR', label: 'Mauritania' },\n{ code: 'MS', label: 'Montserrat' },\n{ code: 'MT', label: 'Malta' },\n{ code: 'MU', label: 'Mauritius' },\n{ code: 'MV', label: 'Maldives' },\n{ code: 'MW', label: 'Malawi' },\n{ code: 'MX', label: 'Mexico' },\n{ code: 'MY', label: 'Malaysia' },\n{ code: 'MZ', label: 'Mozambique' },\n{ code: 'NA', label: 'Namibia' },\n{ code: 'NC', label: 'New Caledonia' },\n{ code: 'NE', label: 'Niger' },\n{ code: 'NF', label: 'Norfolk Island' },\n{ code: 'NG', label: 'Nigeria' },\n{ code: 'NI', label: 'Nicaragua' },\n{ code: 'NL', label: 'Netherlands' },\n{ code: 'NO', label: 'Norway' },\n{ code: 'NP', label: 'Nepal' },\n{ code: 'NR', label: 'Nauru' },\n{ code: 'NU', label: 'Niue' },\n{ code: 'NZ', label: 'New Zealand' },\n{ code: 'OM', label: 'Oman' },\n{ code: 'PA', label: 'Panama' },\n{ code: 'PE', label: 'Peru' },\n{ code: 'PF', label: 'French Polynesia' },\n{ code: 'PG', label: 'Papua New Guinea' },\n{ code: 'PH', label: 'Philippines' },\n{ code: 'PK', label: 'Pakistan' },\n{ code: 'PL', label: 'Poland' },\n{ code: 'PM', label: 'Saint Pierre and Miquelon' },\n{ code: 'PN', label: 'Pitcairn' },\n{ code: 'PR', label: 'Puerto Rico' },\n{ code: 'PS', label: 'Palestine, State of' },\n{ code: 'PT', label: 'Portugal' },\n{ code: 'PW', label: 'Palau' },\n{ code: 'PY', label: 'Paraguay' },\n{ code: 'QA', label: 'Qatar' },\n{ code: 'RE', label: 'Reunion' },\n{ code: 'RO', label: 'Romania' },\n{ code: 'RS', label: 'Serbia' },\n{ code: 'RU', label: 'Russian Federation' },\n{ code: 'RW', label: 'Rwanda' },\n{ code: 'SA', label: 'Saudi Arabia' },\n{ code: 'SB', label: 'Solomon Islands' },\n{ code: 'SC', label: 'Seychelles' },\n{ code: 'SD', label: 'Sudan' },\n{ code: 'SE', label: 'Sweden' },\n{ code: 'SG', label: 'Singapore' },\n{ code: 'SH', label: 'Saint Helena' },\n{ code: 'SI', label: 'Slovenia' },\n{ code: 'SJ', label: 'Svalbard and Jan Mayen' },\n{ code: 'SK', label: 'Slovakia' },\n{ code: 'SL', label: 'Sierra Leone' },\n{ code: 'SM', label: 'San Marino' },\n{ code: 'SN', label: 'Senegal' },\n{ code: 'SO', label: 'Somalia' },\n{ code: 'SR', label: 'Suriname' },\n{ code: 'SS', label: 'South Sudan' },\n{ code: 'ST', label: 'Sao Tome and Principe' },\n{ code: 'SV', label: 'El Salvador' },\n{ code: 'SX', label: 'Sint Maarten (Dutch part)' },\n{ code: 'SY', label: 'Syrian Arab Republic' },\n{ code: 'SZ', label: 'Swaziland' },\n{ code: 'TC', label: 'Turks and Caicos Islands' },\n{ code: 'TD', label: 'Chad' },\n{ code: 'TF', label: 'French Southern Territories' },\n{ code: 'TG', label: 'Togo' },\n{ code: 'TH', label: 'Thailand' },\n{ code: 'TJ', label: 'Tajikistan' },\n{ code: 'TK', label: 'Tokelau' },\n{ code: 'TL', label: 'Timor-Leste' },\n{ code: 'TM', label: 'Turkmenistan' },\n{ code: 'TN', label: 'Tunisia' },\n{ code: 'TO', label: 'Tonga' },\n{ code: 'TR', label: 'Turkey' },\n{ code: 'TT', label: 'Trinidad and Tobago' },\n{ code: 'TV', label: 'Tuvalu' },\n{ code: 'TW', label: 'Taiwan' },\n{ code: 'TZ', label: 'United Republic of Tanzania' },\n{ code: 'UA', label: 'Ukraine' },\n{ code: 'UG', label: 'Uganda' },\n{ code: 'US', label: 'United States', suggested: true },\n{ code: 'UY', label: 'Uruguay' },\n{ code: 'UZ', label: 'Uzbekistan' },\n{ code: 'VA', label: 'Holy See (Vatican City State)' },\n{ code: 'VC', label: 'Saint Vincent and the Grenadines' },\n{ code: 'VE', label: 'Venezuela' },\n{ code: 'VG', label: 'British Virgin Islands' },\n{ code: 'VI', label: 'US Virgin Islands' },\n{ code: 'VN', label: 'Vietnam' },\n{ code: 'VU', label: 'Vanuatu' },\n{ code: 'WF', label: 'Wallis and Futuna' },\n{ code: 'WS', label: 'Samoa' },\n{ code: 'XK', label: 'Kosovo' },\n{ code: 'YE', label: 'Yemen' },\n{ code: 'YT', label: 'Mayotte' },\n{ code: 'ZA', label: 'South Africa' },\n{ code: 'ZM', label: 'Zambia' },\n{ code: 'ZW', label: 'Zimbabwe' }\n\n  ];\n\n  const disasters = [\n    { label: \"Drought\" },\n    { label: \"Earthquake\" },\n    { label: \"Epidemic\" },\n    { label: \"Extreme Temperature\" },\n    { label: \"Flood\" },\n    { label: \"Landslide\" },\n    { label: \"Storm\" },\n    { label: \"Wildfire\" },\n  ];\n\n  // Fetch dropdown data from backend\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/api/countries\").then((response) => {\n      setCountries(response.data);\n    });\n    axios.get(\"http://127.0.0.1:5000/api/disaster-types\").then((response) => {\n      setDisasters(response.data);\n    });\n  }, []);\n\n  const handleSearch = () => {\n    if (country && year && disasterType) {\n      axios\n        .get(\"http://127.0.0.1:5000/api/disaster\", {\n          params: { country, year, disasterType },\n        })\n        .then((response) => {\n          setSearchResults(response.data);\n        });\n    }\n  };\n\n  return (\n    <Container>\n      {/* Header */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            DoomIndex\n          </Typography>\n          <Link href=\"#\" color=\"inherit\" style={{ marginRight: 20 }}>\n            Home\n          </Link>\n          <Link href=\"#about\" color=\"inherit\">\n            About\n          </Link>\n        </Toolbar>\n      </AppBar>\n\n      {/* Introduction Section */}\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Welcome to DoomIndex\n      </Typography>\n      <Typography variant=\"body1\" align=\"center\" gutterBottom>\n        Explore and understand disasters worldwide. Search for specific events and learn how to stay prepared.\n      </Typography>\n\n      {/* Type of Natural Disasters Segment */}\n      <Grid container spacing={2} justifyContent=\"center\" style={{ marginTop: 20 }}>\n        <DisasterCards />\n      </Grid>\n\n      {/* Search Section */}\n      <Grid container spacing={2} justifyContent=\"center\" style={{ marginTop: 40 }}>\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={countries}\n            value={country}\n            onChange={(e, newValue) => setCountry(newValue)}\n            renderInput={(params) => <TextField {...params} label=\"Country\" />}\n          />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={years}\n            value={year}\n            onChange={(e, newValue) => setYear(newValue)}\n            renderInput={(params) => <TextField {...params} label=\"Year\" />}\n          />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={disasters}\n            value={disasterType}\n            onChange={(e, newValue) => setDisasterType(newValue)}\n            renderInput={(params) => <TextField {...params} label=\"Disaster Type\" />}\n          />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSearch}\n            disabled={!country || !year || !disasterType}\n          >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n\n      {/* Results Section */}\n      {searchResults && (\n        <Grid container spacing={4} style={{ marginTop: 40 }}>\n          {/* Left Column */}\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h6\">Country Map</Typography>\n            {/* Render the country-specific map here */}\n            {country && <CountryMap countryCode={country.code.toLowerCase()} />}\n          </Grid>\n\n          {/* Middle Column */}\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h6\">Statistics</Typography>\n            <Typography variant=\"body2\">Type: {searchResults.type}</Typography>\n            <Typography variant=\"body2\">\n              Affected: {searchResults.affectedIndividuals}\n            </Typography>\n            <Typography variant=\"body2\">Deaths: {searchResults.deaths}</Typography>\n            <Typography variant=\"body2\">Severity: {searchResults.severity}</Typography>\n            <Typography variant=\"h6\" style={{ marginTop: 20 }}>\n              Educational Info\n            </Typography>\n            <Typography variant=\"body2\">\n              <Typewriter\n                options={{\n                  strings: searchResults.educationalContent,\n                  autoStart: true,\n                  loop: true,\n                }}\n              />\n            </Typography>\n          </Grid>\n\n          {/* Right Column */}\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h6\">Public Info</Typography>\n            <Typography variant=\"body2\">\n              Preparedness: {searchResults.publicInfo.preparedness}\n            </Typography>\n            <Typography variant=\"body2\">\n              Recommendations: {searchResults.publicInfo.recommendations}\n            </Typography>\n          </Grid>\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}