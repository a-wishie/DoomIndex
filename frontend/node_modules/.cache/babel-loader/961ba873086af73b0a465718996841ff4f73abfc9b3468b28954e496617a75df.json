{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\catastropi\\\\doomindex\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography, Button, TextField, Card, CardContent, CardMedia, AppBar, Toolbar, Link } from \"@mui/material\";\nimport Grid2 from '@mui/system/Unstable_Grid2';\nimport \"./App.css\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport Typewriter from \"typewriter-effect\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\"; // For rendering Leaflet maps\nimport \"leaflet/dist/leaflet.css\";\n\n// Disaster Cards Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisasterCards = () => {\n  const disastersInfo = [{\n    title: \"Drought\",\n    description: \"Prolonged period of insufficient rainfall.\"\n  }, {\n    title: \"Earthquake\",\n    description: \"Sudden shaking of the ground.\"\n  }, {\n    title: \"Epidemic\",\n    description: \"Widespread occurrence of an infectious disease in a community at a particular time.\"\n  }, {\n    title: \"Extreme Temperature\",\n    description: \"Unusual and severe weather conditions, such as heatwaves or cold spells.\"\n  }, {\n    title: \"Flood\",\n    description: \"Overflow of water submerging land.\"\n  }, {\n    title: \"Landslide\",\n    description: \"Earth sliding down a slope.\"\n  }, {\n    title: \"Storm\",\n    description: \"A violent disturbance of the atmosphere with strong winds and usually rain, thunder, lightning, or snow.\"\n  }, {\n    title: \"Wildfire\",\n    description: \"Uncontrolled fires in forests or grasslands.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid2, {\n    container: true,\n    spacing: 3,\n    children: disastersInfo.map((disaster, index) => /*#__PURE__*/_jsxDEV(Grid2, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: \"100%\",\n          backgroundColor: \"#edf2f4\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: `https://via.placeholder.com/150?text=${disaster.title}`,\n          alt: disaster.title,\n          style: {\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          style: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              color: \"#ef233c\",\n              fontWeight: \"bold\",\n              textAlign: \"center\"\n            },\n            children: disaster.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              color: \"#2b2d42\",\n              textAlign: \"center\"\n            },\n            children: disaster.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n// Country Map Component\n_c = DisasterCards;\nconst CountryMap = ({\n  countryCode\n}) => {\n  _s();\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  useEffect(() => {\n    if (countryCode) {\n      // Fetch GeoJSON data for the selected country\n      axios.get(`https://raw.githubusercontent.com/datasets/geo-boundaries-world-110m/master/countries/${countryCode}.geojson`).then(response => {\n        setGeoJsonData(response.data);\n      }).catch(error => {\n        console.error(\"Failed to fetch GeoJSON data:\", error);\n      });\n    }\n  }, [countryCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    children: geoJsonData ? /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: geoJsonData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryMap, \"Ifl/AKJWIeNfysl5PFAQWCy+4d0=\");\n_c2 = CountryMap;\nconst App = () => {\n  _s2();\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const years = Array.from({\n    length: 53\n  }, (_, i) => (1970 + i).toString());\n  const countries = [{\n    code: 'AF',\n    label: 'Afghanistan'\n  }, {\n    code: 'AL',\n    label: 'Albania'\n  }, {\n    code: 'DZ',\n    label: 'Algeria'\n  }, {\n    code: 'AS',\n    label: 'American Samoa'\n  }, {\n    code: 'AD',\n    label: 'Andorra'\n  }, {\n    code: 'AO',\n    label: 'Angola'\n  }, {\n    code: 'AI',\n    label: 'Anguilla'\n  }, {\n    code: 'AQ',\n    label: 'Antarctica'\n  }, {\n    code: 'AG',\n    label: 'Antigua and Barbuda'\n  }, {\n    code: 'AR',\n    label: 'Argentina'\n  }, {\n    code: 'AM',\n    label: 'Armenia'\n  }, {\n    code: 'AW',\n    label: 'Aruba'\n  }, {\n    code: 'AU',\n    label: 'Australia',\n    suggested: true\n  }, {\n    code: 'AT',\n    label: 'Austria'\n  }, {\n    code: 'AZ',\n    label: 'Azerbaijan'\n  }, {\n    code: 'BS',\n    label: 'Bahamas'\n  }, {\n    code: 'BH',\n    label: 'Bahrain'\n  }, {\n    code: 'BD',\n    label: 'Bangladesh'\n  }, {\n    code: 'BB',\n    label: 'Barbados'\n  }, {\n    code: 'BY',\n    label: 'Belarus'\n  }, {\n    code: 'BE',\n    label: 'Belgium'\n  }, {\n    code: 'BZ',\n    label: 'Belize'\n  }, {\n    code: 'BJ',\n    label: 'Benin'\n  }, {\n    code: 'BM',\n    label: 'Bermuda'\n  }, {\n    code: 'BT',\n    label: 'Bhutan'\n  }, {\n    code: 'BO',\n    label: 'Bolivia'\n  }, {\n    code: 'BA',\n    label: 'Bosnia and Herzegovina'\n  }, {\n    code: 'BW',\n    label: 'Botswana'\n  }, {\n    code: 'BV',\n    label: 'Bouvet Island'\n  }, {\n    code: 'BR',\n    label: 'Brazil'\n  }, {\n    code: 'IO',\n    label: 'British Indian Ocean Territory'\n  }, {\n    code: 'BN',\n    label: 'Brunei Darussalam'\n  }, {\n    code: 'BG',\n    label: 'Bulgaria'\n  }, {\n    code: 'BF',\n    label: 'Burkina Faso'\n  }, {\n    code: 'BI',\n    label: 'Burundi'\n  }, {\n    code: 'KH',\n    label: 'Cambodia'\n  }, {\n    code: 'CM',\n    label: 'Cameroon'\n  }, {\n    code: 'CA',\n    label: 'Canada',\n    suggested: true\n  }, {\n    code: 'CV',\n    label: 'Cape Verde'\n  }, {\n    code: 'KY',\n    label: 'Cayman Islands'\n  }, {\n    code: 'CF',\n    label: 'Central African Republic'\n  }, {\n    code: 'TD',\n    label: 'Chad'\n  }, {\n    code: 'CL',\n    label: 'Chile'\n  }, {\n    code: 'CN',\n    label: 'China'\n  }, {\n    code: 'CX',\n    label: 'Christmas Island'\n  }, {\n    code: 'CC',\n    label: 'Cocos (Keeling) Islands'\n  }, {\n    code: 'CO',\n    label: 'Colombia'\n  }, {\n    code: 'KM',\n    label: 'Comoros'\n  }, {\n    code: 'CG',\n    label: 'Congo, Republic of the'\n  }, {\n    code: 'CD',\n    label: 'Congo, Democratic Republic of the'\n  }, {\n    code: 'CK',\n    label: 'Cook Islands'\n  }, {\n    code: 'CR',\n    label: 'Costa Rica'\n  }, {\n    code: 'CI',\n    label: \"Cote d'Ivoire\"\n  }, {\n    code: 'HR',\n    label: 'Croatia'\n  }, {\n    code: 'CU',\n    label: 'Cuba'\n  }, {\n    code: 'CW',\n    label: 'Curacao'\n  }, {\n    code: 'CY',\n    label: 'Cyprus'\n  }, {\n    code: 'CZ',\n    label: 'Czech Republic'\n  }, {\n    code: 'DK',\n    label: 'Denmark'\n  }, {\n    code: 'DJ',\n    label: 'Djibouti'\n  }, {\n    code: 'DM',\n    label: 'Dominica'\n  }, {\n    code: 'DO',\n    label: 'Dominican Republic'\n  }, {\n    code: 'EC',\n    label: 'Ecuador'\n  }, {\n    code: 'EG',\n    label: 'Egypt'\n  }, {\n    code: 'SV',\n    label: 'El Salvador'\n  }, {\n    code: 'GQ',\n    label: 'Equatorial Guinea'\n  }, {\n    code: 'ER',\n    label: 'Eritrea'\n  }, {\n    code: 'EE',\n    label: 'Estonia'\n  }, {\n    code: 'ET',\n    label: 'Ethiopia'\n  }, {\n    code: 'FK',\n    label: 'Falkland Islands (Malvinas)'\n  }, {\n    code: 'FO',\n    label: 'Faroe Islands'\n  }, {\n    code: 'FJ',\n    label: 'Fiji'\n  }, {\n    code: 'FI',\n    label: 'Finland'\n  }, {\n    code: 'FR',\n    label: 'France',\n    suggested: true\n  }, {\n    code: 'GF',\n    label: 'French Guiana'\n  }, {\n    code: 'PF',\n    label: 'French Polynesia'\n  }, {\n    code: 'TF',\n    label: 'French Southern Territories'\n  }, {\n    code: 'GA',\n    label: 'Gabon'\n  }, {\n    code: 'GM',\n    label: 'Gambia'\n  }, {\n    code: 'GE',\n    label: 'Georgia'\n  }, {\n    code: 'DE',\n    label: 'Germany',\n    suggested: true\n  }, {\n    code: 'GH',\n    label: 'Ghana'\n  }, {\n    code: 'GI',\n    label: 'Gibraltar'\n  }, {\n    code: 'GR',\n    label: 'Greece'\n  }, {\n    code: 'GL',\n    label: 'Greenland'\n  }, {\n    code: 'GD',\n    label: 'Grenada'\n  }, {\n    code: 'GP',\n    label: 'Guadeloupe'\n  }, {\n    code: 'GU',\n    label: 'Guam'\n  }, {\n    code: 'GT',\n    label: 'Guatemala'\n  }, {\n    code: 'GG',\n    label: 'Guernsey'\n  }, {\n    code: 'GN',\n    label: 'Guinea'\n  }, {\n    code: 'GW',\n    label: 'Guinea-Bissau'\n  }, {\n    code: 'GY',\n    label: 'Guyana'\n  }, {\n    code: 'HT',\n    label: 'Haiti'\n  }, {\n    code: 'HM',\n    label: 'Heard Island and McDonald Islands'\n  }, {\n    code: 'VA',\n    label: 'Holy See (Vatican City State)'\n  }, {\n    code: 'HN',\n    label: 'Honduras'\n  }, {\n    code: 'HK',\n    label: 'Hong Kong'\n  }, {\n    code: 'HU',\n    label: 'Hungary'\n  }, {\n    code: 'IS',\n    label: 'Iceland'\n  }, {\n    code: 'IN',\n    label: 'India'\n  }, {\n    code: 'ID',\n    label: 'Indonesia'\n  }, {\n    code: 'IR',\n    label: 'Iran, Islamic Republic of'\n  }, {\n    code: 'IQ',\n    label: 'Iraq'\n  }, {\n    code: 'IE',\n    label: 'Ireland'\n  }, {\n    code: 'IM',\n    label: 'Isle of Man'\n  }, {\n    code: 'IL',\n    label: 'Israel'\n  }, {\n    code: 'IT',\n    label: 'Italy'\n  }, {\n    code: 'JM',\n    label: 'Jamaica'\n  }, {\n    code: 'JP',\n    label: 'Japan',\n    suggested: true\n  }, {\n    code: 'JE',\n    label: 'Jersey'\n  }, {\n    code: 'JO',\n    label: 'Jordan'\n  }, {\n    code: 'KZ',\n    label: 'Kazakhstan'\n  }, {\n    code: 'KE',\n    label: 'Kenya'\n  }, {\n    code: 'KI',\n    label: 'Kiribati'\n  }, {\n    code: 'KP',\n    label: \"Korea, Democratic People's Republic of\"\n  }, {\n    code: 'KR',\n    label: 'Korea, Republic of'\n  }, {\n    code: 'KW',\n    label: 'Kuwait'\n  }, {\n    code: 'KG',\n    label: 'Kyrgyzstan'\n  }, {\n    code: 'LA',\n    label: \"Lao People's Democratic Republic\"\n  }, {\n    code: 'LV',\n    label: 'Latvia'\n  }, {\n    code: 'LB',\n    label: 'Lebanon'\n  }, {\n    code: 'LS',\n    label: 'Lesotho'\n  }, {\n    code: 'LR',\n    label: 'Liberia'\n  }, {\n    code: 'LY',\n    label: 'Libya'\n  }, {\n    code: 'LI',\n    label: 'Liechtenstein'\n  }, {\n    code: 'LT',\n    label: 'Lithuania'\n  }, {\n    code: 'LU',\n    label: 'Luxembourg'\n  }, {\n    code: 'MO',\n    label: 'Macao'\n  }, {\n    code: 'MK',\n    label: 'Macedonia, the Former Yugoslav Republic of'\n  }, {\n    code: 'MG',\n    label: 'Madagascar'\n  }, {\n    code: 'MW',\n    label: 'Malawi'\n  }, {\n    code: 'MY',\n    label: 'Malaysia'\n  }, {\n    code: 'MV',\n    label: 'Maldives'\n  }, {\n    code: 'ML',\n    label: 'Mali'\n  }, {\n    code: 'MT',\n    label: 'Malta'\n  }, {\n    code: 'MH',\n    label: 'Marshall Islands'\n  }, {\n    code: 'MQ',\n    label: 'Martinique'\n  }, {\n    code: 'MR',\n    label: 'Mauritania'\n  }, {\n    code: 'MU',\n    label: 'Mauritius'\n  }, {\n    code: 'YT',\n    label: 'Mayotte'\n  }, {\n    code: 'MX',\n    label: 'Mexico'\n  }, {\n    code: 'FM',\n    label: 'Micronesia, Federated States of'\n  }, {\n    code: 'MD',\n    label: 'Moldova, Republic of'\n  }, {\n    code: 'MC',\n    label: 'Monaco'\n  }, {\n    code: 'MN',\n    label: 'Mongolia'\n  }, {\n    code: 'ME',\n    label: 'Montenegro'\n  }];\n  const disasters = [{\n    label: \"Drought\"\n  }, {\n    label: \"Earthquake\"\n  }, {\n    label: \"Epidemic\"\n  }, {\n    label: \"Extreme Temperature\"\n  }, {\n    label: \"Flood\"\n  }, {\n    label: \"Landslide\"\n  }, {\n    label: \"Storm\"\n  }, {\n    label: \"Wildfire\"\n  }];\n\n  // Fetch dropdown data from backend\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/api/countries\").then(response => {\n      setCountry(response.data);\n    });\n    axios.get(\"http://127.0.0.1:5000/api/disaster-types\").then(response => {\n      setDisasterType(response.data);\n    });\n  }, []);\n  const handleFetchGeoJson = async selectedCountry => {\n    try {\n      // Assuming GeoJSON files are served from a backend or public folder\n      const response = await axios.get(`/geojson/${selectedCountry.code}.geojson`);\n      setGeoJsonData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching GeoJSON data:\", error);\n    }\n  };\n  const handleSearch = () => {\n    if (country && year && disasterType) {\n      handleFetchGeoJson(country);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      style: {\n        backgroundColor: \"#2b2d42\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          style: {\n            flexGrow: 1,\n            fontFamily: \"DisplayFont\",\n            color: \"#edf2f4\",\n            fontWeight: \"bold\"\n          },\n          children: \"DoomIndex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Welcome to DoomIndex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Explore and understand disasters worldwide. Search for specific events and learn how to stay prepared.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(DisasterCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: countries,\n          value: country,\n          onChange: (e, newValue) => setCountry(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Country\",\n            variant: \"outlined\",\n            sx: {\n              \"& .MuiOutlinedInput-root\": {\n                borderRadius: \"30px\",\n                // Capsule shape\n                backgroundColor: \"#edf2f4\"\n              },\n              \"& .MuiInputLabel-root\": {\n                color: \"#8d99ae\" // Label color\n              },\n              \"& .MuiOutlinedInput-notchedOutline\": {\n                borderColor: \"#8d99ae\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: years,\n          value: year,\n          onChange: (e, newValue) => setYear(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Year\",\n            variant: \"outlined\",\n            sx: {\n              \"& .MuiOutlinedInput-root\": {\n                borderRadius: \"30px\",\n                // Capsule shape\n                backgroundColor: \"#edf2f4\"\n              },\n              \"& .MuiInputLabel-root\": {\n                color: \"#8d99ae\" // Label color\n              },\n              \"& .MuiOutlinedInput-notchedOutline\": {\n                borderColor: \"#8d99ae\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: disasters,\n          value: disasterType,\n          onChange: (e, newValue) => setDisasterType(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Disaster Type\",\n            variant: \"outlined\",\n            sx: {\n              \"& .MuiOutlinedInput-root\": {\n                borderRadius: \"30px\",\n                // Capsule shape\n                backgroundColor: \"#edf2f4\"\n              },\n              \"& .MuiInputLabel-root\": {\n                color: \"#8d99ae\" // Label color\n              },\n              \"& .MuiOutlinedInput-notchedOutline\": {\n                borderColor: \"#8d99ae\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSearch,\n          disabled: !country || !year || !disasterType,\n          sx: {\n            borderRadius: \"30px\",\n            // Capsule shape\n            backgroundColor: \"#ef233c\",\n            // Button background color\n            color: \"#edf2f4\",\n            // Text color\n            padding: \"10px 20px\",\n            // Button padding for a balanced design\n            fontWeight: \"bold\",\n            \"&:hover\": {\n              backgroundColor: \"#d90429\" // Hover color\n            },\n            \"&:disabled\": {\n              backgroundColor: \"#8d99ae\",\n              // Disabled color\n              color: \"#edf2f4\"\n            }\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 4,\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Country Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 7\n        }, this), country && geoJsonData ? /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [20, 0] // Default center, can be adjusted based on GeoJSON\n          ,\n          zoom: 4 // Adjust zoom level\n          ,\n          style: {\n            height: \"400px\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n            data: geoJsonData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Loading map for \", country.label, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Type: \", searchResults.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Affected: \", searchResults.affectedIndividuals]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Deaths: \", searchResults.deaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Severity: \", searchResults.severity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: 20\n          },\n          children: \"Educational Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: /*#__PURE__*/_jsxDEV(Typewriter, {\n            options: {\n              strings: searchResults.educationalContent,\n              autoStart: true,\n              loop: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Public Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Preparedness: \", searchResults.publicInfo.preparedness]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Recommendations: \", searchResults.publicInfo.recommendations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"B3HNfsXPlQYO/UpoidvF0QoEIVg=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DisasterCards\");\n$RefreshReg$(_c2, \"CountryMap\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Button","TextField","Card","CardContent","CardMedia","AppBar","Toolbar","Link","Grid2","Autocomplete","axios","Typewriter","MapContainer","TileLayer","GeoJSON","jsxDEV","_jsxDEV","DisasterCards","disastersInfo","title","description","container","spacing","children","map","disaster","index","item","xs","sm","md","style","height","backgroundColor","display","flexDirection","component","image","alt","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","variant","color","fontWeight","textAlign","_c","CountryMap","countryCode","_s","geoJsonData","setGeoJsonData","get","then","response","data","catch","error","console","width","center","zoom","url","attribution","_c2","App","_s2","country","setCountry","year","setYear","disasterType","setDisasterType","searchResults","setSearchResults","years","Array","from","length","_","i","toString","countries","code","label","suggested","disasters","handleFetchGeoJson","selectedCountry","handleSearch","position","fontFamily","align","gutterBottom","justifyContent","marginTop","options","value","onChange","e","newValue","renderInput","params","sx","borderRadius","borderColor","onClick","disabled","padding","type","affectedIndividuals","deaths","severity","strings","educationalContent","autoStart","loop","publicInfo","preparedness","recommendations","_c3","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/catastropi/doomindex/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Button,\n  TextField,\n  Card,\n  CardContent,\n  CardMedia,\n  AppBar,\n  Toolbar,\n  Link,\n} from \"@mui/material\";\nimport Grid2 from '@mui/system/Unstable_Grid2';\nimport \"./App.css\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport Typewriter from \"typewriter-effect\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\"; // For rendering Leaflet maps\nimport \"leaflet/dist/leaflet.css\";\n\n// Disaster Cards Component\n\nconst DisasterCards = () => {\n  const disastersInfo = [ \n    { title: \"Drought\", description: \"Prolonged period of insufficient rainfall.\" }, \n    { title: \"Earthquake\", description: \"Sudden shaking of the ground.\" }, \n    { title: \"Epidemic\", description: \"Widespread occurrence of an infectious disease in a community at a particular time.\" }, \n    { title: \"Extreme Temperature\", description: \"Unusual and severe weather conditions, such as heatwaves or cold spells.\" }, \n    { title: \"Flood\", description: \"Overflow of water submerging land.\" }, { title: \"Landslide\", description: \"Earth sliding down a slope.\" }, \n    { title: \"Storm\", description: \"A violent disturbance of the atmosphere with strong winds and usually rain, thunder, lightning, or snow.\" }, \n    { title: \"Wildfire\", description: \"Uncontrolled fires in forests or grasslands.\" }\n  ];\n\n  return (\n    <Grid2 container spacing={3}>\n      {disastersInfo.map((disaster, index) => (\n        <Grid2 item xs={12} sm={6} md={3} key={index}>\n          <Card\n            style={{\n              height: \"100%\",\n              backgroundColor: \"#edf2f4\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={`https://via.placeholder.com/150?text=${disaster.title}`}\n              alt={disaster.title}\n              style={{ objectFit: \"cover\" }}\n            />\n            <CardContent style={{ flexGrow: 1 }}>\n              <Typography\n                variant=\"h6\"\n                style={{\n                  color: \"#ef233c\",\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                }}\n              >\n                {disaster.title}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                style={{ color: \"#2b2d42\", textAlign: \"center\" }}\n              >\n                {disaster.description}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid2>\n      ))}\n    </Grid2>\n  );\n};\n\n// Country Map Component\nconst CountryMap = ({ countryCode }) => {\n  const [geoJsonData, setGeoJsonData] = useState(null);\n\n  useEffect(() => {\n    if (countryCode) {\n      // Fetch GeoJSON data for the selected country\n      axios\n        .get(`https://raw.githubusercontent.com/datasets/geo-boundaries-world-110m/master/countries/${countryCode}.geojson`)\n        .then((response) => {\n          setGeoJsonData(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Failed to fetch GeoJSON data:\", error);\n        });\n    }\n  }, [countryCode]);\n\n  return (\n    <div style={{ height: \"500px\", width: \"100%\" }}>\n      {geoJsonData ? (\n        <MapContainer center={[0, 0]} zoom={2} style={{ height: \"100%\", width: \"100%\" }}>\n          {/* Base map tiles */}\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n\n          {/* Render GeoJSON data for the selected country */}\n          <GeoJSON data={geoJsonData} />\n        </MapContainer>\n      ) : (\n        <p>Loading map...</p>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  const [geoJsonData, setGeoJsonData] = useState(null);\n\n  const years = Array.from({ length: 53 }, (_, i) => (1970 + i).toString());\n\n  const countries = [\n    { code: 'AF', label: 'Afghanistan' },\n    { code: 'AL', label: 'Albania' },\n    { code: 'DZ', label: 'Algeria' },\n    { code: 'AS', label: 'American Samoa' },\n    { code: 'AD', label: 'Andorra' },\n    { code: 'AO', label: 'Angola' },\n    { code: 'AI', label: 'Anguilla' },\n    { code: 'AQ', label: 'Antarctica' },\n    { code: 'AG', label: 'Antigua and Barbuda' },\n    { code: 'AR', label: 'Argentina' },\n    { code: 'AM', label: 'Armenia' },\n    { code: 'AW', label: 'Aruba' },\n    { code: 'AU', label: 'Australia', suggested: true },\n    { code: 'AT', label: 'Austria' },\n    { code: 'AZ', label: 'Azerbaijan' },\n    { code: 'BS', label: 'Bahamas' },\n    { code: 'BH', label: 'Bahrain' },\n    { code: 'BD', label: 'Bangladesh' },\n    { code: 'BB', label: 'Barbados' },\n    { code: 'BY', label: 'Belarus' },\n    { code: 'BE', label: 'Belgium' },\n    { code: 'BZ', label: 'Belize' },\n    { code: 'BJ', label: 'Benin' },\n    { code: 'BM', label: 'Bermuda' },\n    { code: 'BT', label: 'Bhutan' },\n    { code: 'BO', label: 'Bolivia' },\n    { code: 'BA', label: 'Bosnia and Herzegovina' },\n    { code: 'BW', label: 'Botswana' },\n    { code: 'BV', label: 'Bouvet Island' },\n    { code: 'BR', label: 'Brazil' },\n    { code: 'IO', label: 'British Indian Ocean Territory' },\n    { code: 'BN', label: 'Brunei Darussalam' },\n    { code: 'BG', label: 'Bulgaria' },\n    { code: 'BF', label: 'Burkina Faso' },\n    { code: 'BI', label: 'Burundi' },\n    { code: 'KH', label: 'Cambodia' },\n    { code: 'CM', label: 'Cameroon' },\n    { code: 'CA', label: 'Canada', suggested: true },\n    { code: 'CV', label: 'Cape Verde' },\n    { code: 'KY', label: 'Cayman Islands' },\n    { code: 'CF', label: 'Central African Republic' },\n    { code: 'TD', label: 'Chad' },\n    { code: 'CL', label: 'Chile' },\n    { code: 'CN', label: 'China' },\n    { code: 'CX', label: 'Christmas Island' },\n    { code: 'CC', label: 'Cocos (Keeling) Islands' },\n    { code: 'CO', label: 'Colombia' },\n    { code: 'KM', label: 'Comoros' },\n    { code: 'CG', label: 'Congo, Republic of the' },\n    { code: 'CD', label: 'Congo, Democratic Republic of the' },\n    { code: 'CK', label: 'Cook Islands' },\n    { code: 'CR', label: 'Costa Rica' },\n    { code: 'CI', label: \"Cote d'Ivoire\" },\n    { code: 'HR', label: 'Croatia' },\n    { code: 'CU', label: 'Cuba' },\n    { code: 'CW', label: 'Curacao' },\n    { code: 'CY', label: 'Cyprus' },\n    { code: 'CZ', label: 'Czech Republic' },\n    { code: 'DK', label: 'Denmark' },\n    { code: 'DJ', label: 'Djibouti' },\n    { code: 'DM', label: 'Dominica' },\n    { code: 'DO', label: 'Dominican Republic' },\n    { code: 'EC', label: 'Ecuador' },\n    { code: 'EG', label: 'Egypt' },\n    { code: 'SV', label: 'El Salvador' },\n    { code: 'GQ', label: 'Equatorial Guinea' },\n    { code: 'ER', label: 'Eritrea' },\n    { code: 'EE', label: 'Estonia' },\n    { code: 'ET', label: 'Ethiopia' },\n    { code: 'FK', label: 'Falkland Islands (Malvinas)' },\n    { code: 'FO', label: 'Faroe Islands' },\n    { code: 'FJ', label: 'Fiji' },\n    { code: 'FI', label: 'Finland' },\n    { code: 'FR', label: 'France', suggested: true },\n    { code: 'GF', label: 'French Guiana' },\n    { code: 'PF', label: 'French Polynesia' },\n    { code: 'TF', label: 'French Southern Territories' },\n    { code: 'GA', label: 'Gabon' },\n    { code: 'GM', label: 'Gambia' },\n    { code: 'GE', label: 'Georgia' },\n    { code: 'DE', label: 'Germany', suggested: true },\n    { code: 'GH', label: 'Ghana' },\n    { code: 'GI', label: 'Gibraltar' },\n    { code: 'GR', label: 'Greece' },\n    { code: 'GL', label: 'Greenland' },\n    { code: 'GD', label: 'Grenada' },\n    { code: 'GP', label: 'Guadeloupe' },\n    { code: 'GU', label: 'Guam' },\n    { code: 'GT', label: 'Guatemala' },\n    { code: 'GG', label: 'Guernsey' },\n    { code: 'GN', label: 'Guinea' },\n    { code: 'GW', label: 'Guinea-Bissau' },\n    { code: 'GY', label: 'Guyana' },\n    { code: 'HT', label: 'Haiti' },\n    { code: 'HM', label: 'Heard Island and McDonald Islands' },\n    { code: 'VA', label: 'Holy See (Vatican City State)' },\n    { code: 'HN', label: 'Honduras' },\n    { code: 'HK', label: 'Hong Kong' },\n    { code: 'HU', label: 'Hungary' },\n    { code: 'IS', label: 'Iceland' },\n    { code: 'IN', label: 'India' },\n    { code: 'ID', label: 'Indonesia' },\n    { code: 'IR', label: 'Iran, Islamic Republic of' },\n    { code: 'IQ', label: 'Iraq' },\n    { code: 'IE', label: 'Ireland' },\n    { code: 'IM', label: 'Isle of Man' },\n    { code: 'IL', label: 'Israel' },\n    { code: 'IT', label: 'Italy' },\n    { code: 'JM', label: 'Jamaica' },\n    { code: 'JP', label: 'Japan', suggested: true },\n    { code: 'JE', label: 'Jersey' },\n    { code: 'JO', label: 'Jordan' },\n    { code: 'KZ', label: 'Kazakhstan' },\n    { code: 'KE', label: 'Kenya' },\n    { code: 'KI', label: 'Kiribati' },\n    { code: 'KP', label: \"Korea, Democratic People's Republic of\" },\n    { code: 'KR', label: 'Korea, Republic of' },\n    { code: 'KW', label: 'Kuwait' },\n    { code: 'KG', label: 'Kyrgyzstan' },\n    { code: 'LA', label: \"Lao People's Democratic Republic\" },\n    { code: 'LV', label: 'Latvia' },\n    { code: 'LB', label: 'Lebanon' },\n    { code: 'LS', label: 'Lesotho' },\n    { code: 'LR', label: 'Liberia' },\n    { code: 'LY', label: 'Libya' },\n    { code: 'LI', label: 'Liechtenstein' },\n    { code: 'LT', label: 'Lithuania' },\n    { code: 'LU', label: 'Luxembourg' },\n    { code: 'MO', label: 'Macao' },\n    { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of' },\n    { code: 'MG', label: 'Madagascar' },\n    { code: 'MW', label: 'Malawi' },\n    { code: 'MY', label: 'Malaysia' },\n    { code: 'MV', label: 'Maldives' },\n    { code: 'ML', label: 'Mali' },\n    { code: 'MT', label: 'Malta' },\n    { code: 'MH', label: 'Marshall Islands' },\n    { code: 'MQ', label: 'Martinique' },\n    { code: 'MR', label: 'Mauritania' },\n    { code: 'MU', label: 'Mauritius' },\n    { code: 'YT', label: 'Mayotte' },\n    { code: 'MX', label: 'Mexico' },\n    { code: 'FM', label: 'Micronesia, Federated States of' },\n    { code: 'MD', label: 'Moldova, Republic of' },\n    { code: 'MC', label: 'Monaco' },\n    { code: 'MN', label: 'Mongolia' },\n    { code: 'ME', label: 'Montenegro' },\n  ];\n\n  const disasters = [\n    { label: \"Drought\" },\n    { label: \"Earthquake\" },\n    { label: \"Epidemic\" },\n    { label: \"Extreme Temperature\" },\n    { label: \"Flood\" },\n    { label: \"Landslide\" },\n    { label: \"Storm\" },\n    { label: \"Wildfire\" },\n  ];\n\n  // Fetch dropdown data from backend\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/api/countries\").then((response) => {\n      setCountry(response.data);\n    });\n    axios.get(\"http://127.0.0.1:5000/api/disaster-types\").then((response) => {\n      setDisasterType(response.data);\n    });\n  }, []);\n\n  const handleFetchGeoJson = async (selectedCountry) => {\n    try {\n      // Assuming GeoJSON files are served from a backend or public folder\n      const response = await axios.get(`/geojson/${selectedCountry.code}.geojson`);\n      setGeoJsonData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching GeoJSON data:\", error);\n    }\n  };\n\n  const handleSearch = () => {\n    if (country && year && disasterType) {\n      handleFetchGeoJson(country);\n    }\n  };\n\n  return (\n    <Container>\n      {/* Header */}\n\n      <AppBar position=\"static\" style={{ backgroundColor: \"#2b2d42\" }}>\n        <Toolbar>\n          <Typography\n            variant=\"h2\"\n            style={{ flexGrow: 1, fontFamily:\"DisplayFont\", color: \"#edf2f4\", fontWeight: \"bold\" }}\n          >\n            DoomIndex\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      {/* Introduction Section */}\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Welcome to DoomIndex\n      </Typography>\n      <Typography variant=\"body1\" align=\"center\" gutterBottom>\n        Explore and understand disasters worldwide. Search for specific events and learn how to stay prepared.\n      </Typography>\n\n      {/* Type of Natural Disasters Segment */}\n      <Grid2 container spacing={2} justifyContent=\"center\" style={{ marginTop: 20 }}>\n        <DisasterCards />\n      </Grid2>\n\n      {/* Search Section */}\n      <Grid2 container spacing={2} justifyContent=\"center\" style={{ marginTop: 40 }}>\n      <Grid2 item xs={12} sm={3}>\n        <Autocomplete\n          options={countries}\n          value={country}\n          onChange={(e, newValue) => setCountry(newValue)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Country\"\n              variant=\"outlined\"\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  borderRadius: \"30px\", // Capsule shape\n                  backgroundColor: \"#edf2f4\",\n                },\n                \"& .MuiInputLabel-root\": {\n                  color: \"#8d99ae\", // Label color\n                },\n                \"& .MuiOutlinedInput-notchedOutline\": {\n                  borderColor: \"#8d99ae\",\n                },\n              }}\n            />\n          )}\n        />\n      </Grid2>\n\n        <Grid2 item xs={12} sm={3}>\n        <Autocomplete\n          options={years}\n          value={year}\n          onChange={(e, newValue) => setYear(newValue)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Year\"\n              variant=\"outlined\"\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  borderRadius: \"30px\", // Capsule shape\n                  backgroundColor: \"#edf2f4\",\n                },\n                \"& .MuiInputLabel-root\": {\n                  color: \"#8d99ae\", // Label color\n                },\n                \"& .MuiOutlinedInput-notchedOutline\": {\n                  borderColor: \"#8d99ae\",\n                },\n              }}\n            />\n          )}\n        />\n      </Grid2>\n\n      <Grid2 item xs={12} sm={3}>\n        <Autocomplete\n          options={disasters}\n          value={disasterType}\n          onChange={(e, newValue) => setDisasterType(newValue)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Disaster Type\"\n              variant=\"outlined\"\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  borderRadius: \"30px\", // Capsule shape\n                  backgroundColor: \"#edf2f4\",\n                },\n                \"& .MuiInputLabel-root\": {\n                  color: \"#8d99ae\", // Label color\n                },\n                \"& .MuiOutlinedInput-notchedOutline\": {\n                  borderColor: \"#8d99ae\",\n                },\n              }}\n            />\n          )}\n        />\n      </Grid2>\n\n      <Grid2 item xs={12} sm={3}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSearch}\n          disabled={!country || !year || !disasterType}\n          sx={{\n            borderRadius: \"30px\", // Capsule shape\n            backgroundColor: \"#ef233c\", // Button background color\n            color: \"#edf2f4\", // Text color\n            padding: \"10px 20px\", // Button padding for a balanced design\n            fontWeight: \"bold\",\n            \"&:hover\": {\n              backgroundColor: \"#d90429\", // Hover color\n            },\n            \"&:disabled\": {\n              backgroundColor: \"#8d99ae\", // Disabled color\n              color: \"#edf2f4\",\n            },\n          }}\n        >\n          Search\n        </Button>\n      </Grid2>\n  </Grid2>\n      {/* Results Section */}\n{searchResults && (\n  <Grid2 container spacing={4} style={{ marginTop: 40 }}>\n    {/* Left Column */}\n    <Grid2 item xs={12} sm={4}>\n      <Typography variant=\"h6\">Country Map</Typography>\n      {/* Render the country-specific map here */}\n      {country && geoJsonData ? (\n        <MapContainer\n          center={[20, 0]} // Default center, can be adjusted based on GeoJSON\n          zoom={4} // Adjust zoom level\n          style={{ height: \"400px\", width: \"100%\" }}\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          <GeoJSON data={geoJsonData} />\n        </MapContainer>\n      ) : (\n        <Typography align=\"center\">Loading map for {country.label}...</Typography>\n      )}\n    </Grid2>\n\n    {/* Middle Column */}\n    <Grid2 item xs={12} sm={4}>\n      <Typography variant=\"h6\">Statistics</Typography>\n      <Typography variant=\"body2\">Type: {searchResults.type}</Typography>\n      <Typography variant=\"body2\">\n        Affected: {searchResults.affectedIndividuals}\n      </Typography>\n      <Typography variant=\"body2\">Deaths: {searchResults.deaths}</Typography>\n      <Typography variant=\"body2\">Severity: {searchResults.severity}</Typography>\n      <Typography variant=\"h6\" style={{ marginTop: 20 }}>\n        Educational Info\n      </Typography>\n      <Typography variant=\"body2\">\n        <Typewriter\n          options={{\n            strings: searchResults.educationalContent,\n            autoStart: true,\n            loop: true,\n          }}\n        />\n      </Typography>\n    </Grid2>\n\n    {/* Right Column */}\n    <Grid2 item xs={12} sm={4}>\n      <Typography variant=\"h6\">Public Info</Typography>\n      <Typography variant=\"body2\">\n        Preparedness: {searchResults.publicInfo.preparedness}\n      </Typography>\n      <Typography variant=\"body2\">\n        Recommendations: {searchResults.publicInfo.recommendations}\n      </Typography>\n    </Grid2>\n  </Grid2>\n)}\n</Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}