{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\catastropi\\\\doomindex\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography, Button, TextField, Card, CardContent, CardMedia, AppBar, Toolbar, Grid } from \"@mui/material\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n// Fix Leaflet icon issue\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Disaster Cards Component\nconst DisasterCards = () => {\n  const disastersInfo = [{\n    title: \"Drought\",\n    description: \"Prolonged period of insufficient rainfall.\"\n  }, {\n    title: \"Earthquake\",\n    description: \"Sudden shaking of the ground.\"\n  }, {\n    title: \"Epidemic\",\n    description: \"Widespread occurrence of an infectious disease.\"\n  }, {\n    title: \"Extreme Temperature\",\n    description: \"Unusual and severe weather conditions.\"\n  }, {\n    title: \"Flood\",\n    description: \"Overflow of water submerging land.\"\n  }, {\n    title: \"Landslide\",\n    description: \"Earth sliding down a slope.\"\n  }, {\n    title: \"Storm\",\n    description: \"Violent disturbance of the atmosphere.\"\n  }, {\n    title: \"Wildfire\",\n    description: \"Uncontrolled fires in forests or grasslands.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: disastersInfo.map((disaster, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: \"100%\",\n          backgroundColor: \"#edf2f4\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          borderColor: \"#2b2d42\",\n          borderRadius: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: `/disasterImages/${disaster.title.toLowerCase()}.png`,\n          alt: disaster.title,\n          sx: {\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontFamily: \"system-ui\",\n              color: \"#ef233c\",\n              fontWeight: \"bold\",\n              textAlign: \"center\"\n            },\n            children: disaster.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: \"#2b2d42\",\n              textAlign: \"center\"\n            },\n            children: disaster.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n// Stats Panel Component\n_c = DisasterCards;\nconst StatsPanel = ({\n  data\n}) => {\n  var _stats$total_deaths, _stats$affected_popul, _stats$economic_loss;\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n  const stats = data[0];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Disaster Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Total Deaths: \", ((_stats$total_deaths = stats.total_deaths) === null || _stats$total_deaths === void 0 ? void 0 : _stats$total_deaths.toLocaleString()) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Affected Population: \", ((_stats$affected_popul = stats.affected_population) === null || _stats$affected_popul === void 0 ? void 0 : _stats$affected_popul.toLocaleString()) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Economic Loss: $\", ((_stats$economic_loss = stats.economic_loss) === null || _stats$economic_loss === void 0 ? void 0 : _stats$economic_loss.toLocaleString()) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n// Historical Trends Component\n_c2 = StatsPanel;\nconst HistoricalTrends = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n\n  // Process data for the chart\n  const chartData = data.map(item => ({\n    year: item.year,\n    deaths: item.total_deaths,\n    affected: item.affected_population\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Historical Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 350,\n        height: 300,\n        data: chartData,\n        margin: {\n          top: 5,\n          right: 20,\n          bottom: 5,\n          left: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"deaths\",\n          stroke: \"#ef233c\",\n          name: \"Deaths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"affected\",\n          stroke: \"#2b2d42\",\n          name: \"Affected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n// Map Component\n_c3 = HistoricalTrends;\nconst DisasterMap = ({\n  country,\n  geoJsonData\n}) => {\n  _s();\n  const [mapCenter, setMapCenter] = useState([0, 0]);\n  const [zoom, setZoom] = useState(4);\n  useEffect(() => {\n    if (geoJsonData) {\n      try {\n        const bounds = L.geoJSON(geoJsonData).getBounds();\n        setMapCenter([(bounds.getNorth() + bounds.getSouth()) / 2, (bounds.getEast() + bounds.getWest()) / 2]);\n      } catch (error) {\n        console.error('Error processing GeoJSON:', error);\n        setMapCenter([0, 0]);\n      }\n    }\n  }, [geoJsonData]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Impact Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoom,\n          style: {\n            height: '100%',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 OpenStreetMap contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), geoJsonData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n            data: geoJsonData,\n            style: {\n              fillColor: '#ef233c',\n              weight: 2,\n              opacity: 1,\n              color: 'white',\n              fillOpacity: 0.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App Component\n_s(DisasterMap, \"Fd+qlcsJidaa8JzlvDyo+3Xik5M=\");\n_c4 = DisasterMap;\nconst App = () => {\n  _s2();\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Sample data structure - replace with your actual data\n  const years = Array.from({\n    length: 53\n  }, (_, i) => (1970 + i).toString());\n  const disasters = [{\n    label: \"Drought\"\n  }, {\n    label: \"Earthquake\"\n  }, {\n    label: \"Epidemic\"\n  }, {\n    label: \"Extreme Temperature\"\n  }, {\n    label: \"Flood\"\n  }, {\n    label: \"Landslide\"\n  }, {\n    label: \"Storm\"\n  }, {\n    label: \"Wildfire\"\n  }];\n  const handleSearch = async () => {\n    if (!country || !year || !disasterType) return;\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch disaster data\n      const disasterResponse = await axios.get('/api/disasters', {\n        params: {\n          country: country.code,\n          year,\n          type: disasterType.label\n        }\n      });\n\n      // Fetch GeoJSON data\n      const geoJsonResponse = await axios.get(`/api/geojson/${country.code.toLowerCase()}`);\n      setSearchResults(disasterResponse.data);\n      setGeoJsonData(geoJsonResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch disaster data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: \"#2b2d42\",\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          sx: {\n            flexGrow: 1,\n            textAlign: 'center',\n            fontFamily: \"DisplayFont\",\n            color: \"#edf2f4\"\n          },\n          children: \"DoomIndex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"Welcome to DoomIndex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4\n      },\n      children: \"Explore and understand disasters worldwide. Search for specific events and learn how to stay prepared.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisasterCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: countries,\n          value: country,\n          onChange: (_, newValue) => setCountry(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Country\",\n            variant: \"outlined\",\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#edf2f4'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: years,\n          value: year,\n          onChange: (_, newValue) => setYear(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Year\",\n            variant: \"outlined\",\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#edf2f4'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: disasters,\n          value: disasterType,\n          onChange: (_, newValue) => setDisasterType(newValue),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Disaster Type\",\n            variant: \"outlined\",\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#edf2f4'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSearch,\n          disabled: !country || !year || !disasterType || loading,\n          sx: {\n            borderRadius: '30px',\n            backgroundColor: '#ef233c',\n            color: '#edf2f4',\n            padding: '15px 30px',\n            '&:hover': {\n              backgroundColor: '#d90429'\n            },\n            '&:disabled': {\n              backgroundColor: '#8d99ae'\n            }\n          },\n          children: loading ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(DisasterMap, {\n          country: country,\n          geoJsonData: geoJsonData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(StatsPanel, {\n          data: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(HistoricalTrends, {\n          data: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        backgroundColor: \"#2b2d42\",\n        color: \"#edf2f4\",\n        padding: \"20px\",\n        marginTop: \"40px\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"Contact: info@doomindex.com | \\xA9 2024 DoomIndex. All Rights Reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"e0N1E1oDM3j4F0eCKsnDzaWXRJA=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DisasterCards\");\n$RefreshReg$(_c2, \"StatsPanel\");\n$RefreshReg$(_c3, \"HistoricalTrends\");\n$RefreshReg$(_c4, \"DisasterMap\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Button","TextField","Card","CardContent","CardMedia","AppBar","Toolbar","Grid","Autocomplete","axios","MapContainer","TileLayer","GeoJSON","L","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","DisasterCards","disastersInfo","title","description","container","spacing","children","map","disaster","index","item","xs","sm","md","sx","height","backgroundColor","display","flexDirection","borderColor","borderRadius","component","image","toLowerCase","alt","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","variant","fontFamily","color","fontWeight","textAlign","_c","StatsPanel","data","_stats$total_deaths","_stats$affected_popul","_stats$economic_loss","length","p","stats","mb","total_deaths","toLocaleString","affected_population","economic_loss","_c2","HistoricalTrends","chartData","year","deaths","affected","width","margin","top","right","bottom","left","strokeDasharray","dataKey","type","stroke","name","_c3","DisasterMap","country","geoJsonData","_s","mapCenter","setMapCenter","zoom","setZoom","bounds","geoJSON","getBounds","getNorth","getSouth","getEast","getWest","error","console","style","center","url","attribution","fillColor","weight","opacity","fillOpacity","_c4","App","_s2","setCountry","setYear","disasterType","setDisasterType","searchResults","setSearchResults","setGeoJsonData","loading","setLoading","setError","years","Array","from","_","i","toString","disasters","label","handleSearch","disasterResponse","get","params","code","geoJsonResponse","maxWidth","position","mt","options","countries","value","onChange","newValue","renderInput","onClick","disabled","padding","marginTop","_c5","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/catastropi/doomindex/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Button,\n  TextField,\n  Card,\n  CardContent,\n  CardMedia,\n  AppBar,\n  Toolbar,\n  Grid,\n} from \"@mui/material\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n// Fix Leaflet icon issue\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n// Disaster Cards Component\nconst DisasterCards = () => {\n  const disastersInfo = [\n    { title: \"Drought\", description: \"Prolonged period of insufficient rainfall.\" },\n    { title: \"Earthquake\", description: \"Sudden shaking of the ground.\" },\n    { title: \"Epidemic\", description: \"Widespread occurrence of an infectious disease.\" },\n    { title: \"Extreme Temperature\", description: \"Unusual and severe weather conditions.\" },\n    { title: \"Flood\", description: \"Overflow of water submerging land.\" },\n    { title: \"Landslide\", description: \"Earth sliding down a slope.\" },\n    { title: \"Storm\", description: \"Violent disturbance of the atmosphere.\" },\n    { title: \"Wildfire\", description: \"Uncontrolled fires in forests or grasslands.\" }\n  ];\n\n  return (\n    <Grid container spacing={3}>\n      {disastersInfo.map((disaster, index) => (\n        <Grid item xs={12} sm={6} md={3} key={index}>\n          <Card\n            sx={{\n              height: \"100%\",\n              backgroundColor: \"#edf2f4\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              borderColor: \"#2b2d42\",\n              borderRadius: 4,\n            }}\n          >\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={`/disasterImages/${disaster.title.toLowerCase()}.png`}\n              alt={disaster.title}\n              sx={{ objectFit: \"cover\" }}\n            />\n            <CardContent sx={{ flexGrow: 1 }}>\n              <Typography\n                variant=\"h6\"\n                sx={{\n                  fontFamily: \"system-ui\",\n                  color: \"#ef233c\",\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                }}\n              >\n                {disaster.title}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                sx={{ color: \"#2b2d42\", textAlign: \"center\" }}\n              >\n                {disaster.description}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\n// Stats Panel Component\nconst StatsPanel = ({ data }) => {\n  if (!data || data.length === 0) {\n    return (\n      <Card sx={{ height: '100%', p: 2 }}>\n        <Typography>No data available</Typography>\n      </Card>\n    );\n  }\n\n  const stats = data[0];\n\n  return (\n    <Card sx={{ height: '100%', p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>Disaster Statistics</Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              Total Deaths: {stats.total_deaths?.toLocaleString() || 'N/A'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              Affected Population: {stats.affected_population?.toLocaleString() || 'N/A'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              Economic Loss: ${stats.economic_loss?.toLocaleString() || 'N/A'}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Historical Trends Component\nconst HistoricalTrends = ({ data }) => {\n  if (!data || data.length === 0) return null;\n\n  // Process data for the chart\n  const chartData = data.map(item => ({\n    year: item.year,\n    deaths: item.total_deaths,\n    affected: item.affected_population,\n  }));\n\n  return (\n    <Card sx={{ height: '100%', p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>Historical Trends</Typography>\n        <LineChart width={350} height={300} data={chartData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"year\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"#ef233c\" name=\"Deaths\" />\n          <Line type=\"monotone\" dataKey=\"affected\" stroke=\"#2b2d42\" name=\"Affected\" />\n        </LineChart>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Map Component\nconst DisasterMap = ({ country, geoJsonData }) => {\n  const [mapCenter, setMapCenter] = useState([0, 0]);\n  const [zoom, setZoom] = useState(4);\n\n  useEffect(() => {\n    if (geoJsonData) {\n      try {\n        const bounds = L.geoJSON(geoJsonData).getBounds();\n        setMapCenter([\n          (bounds.getNorth() + bounds.getSouth()) / 2,\n          (bounds.getEast() + bounds.getWest()) / 2\n        ]);\n      } catch (error) {\n        console.error('Error processing GeoJSON:', error);\n        setMapCenter([0, 0]);\n      }\n    }\n  }, [geoJsonData]);\n\n  return (\n    <Card sx={{ height: '100%', p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>Impact Map</Typography>\n        <div style={{ height: '400px', width: '100%' }}>\n          <MapContainer\n            center={mapCenter}\n            zoom={zoom}\n            style={{ height: '100%', width: '100%' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; OpenStreetMap contributors'\n            />\n            {geoJsonData && (\n              <GeoJSON\n                data={geoJsonData}\n                style={{\n                  fillColor: '#ef233c',\n                  weight: 2,\n                  opacity: 1,\n                  color: 'white',\n                  fillOpacity: 0.7\n                }}\n              />\n            )}\n          </MapContainer>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Main App Component\nconst App = () => {\n  const [country, setCountry] = useState(null);\n  const [year, setYear] = useState(null);\n  const [disasterType, setDisasterType] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Sample data structure - replace with your actual data\n  const years = Array.from({ length: 53 }, (_, i) => (1970 + i).toString());\n  const disasters = [\n    { label: \"Drought\" },\n    { label: \"Earthquake\" },\n    { label: \"Epidemic\" },\n    { label: \"Extreme Temperature\" },\n    { label: \"Flood\" },\n    { label: \"Landslide\" },\n    { label: \"Storm\" },\n    { label: \"Wildfire\" },\n  ];\n\n  const handleSearch = async () => {\n    if (!country || !year || !disasterType) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Fetch disaster data\n      const disasterResponse = await axios.get('/api/disasters', {\n        params: {\n          country: country.code,\n          year,\n          type: disasterType.label\n        }\n      });\n\n      // Fetch GeoJSON data\n      const geoJsonResponse = await axios.get(`/api/geojson/${country.code.toLowerCase()}`);\n\n      setSearchResults(disasterResponse.data);\n      setGeoJsonData(geoJsonResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch disaster data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <AppBar position=\"static\" sx={{ backgroundColor: \"#2b2d42\", mb: 4 }}>\n        <Toolbar>\n          <Typography\n            variant=\"h2\"\n            sx={{\n              flexGrow: 1,\n              textAlign: 'center',\n              fontFamily: \"DisplayFont\",\n              color: \"#edf2f4\",\n            }}\n          >\n            DoomIndex\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>\n        Welcome to DoomIndex\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n        Explore and understand disasters worldwide. Search for specific events and learn how to stay prepared.\n      </Typography>\n\n      <DisasterCards />\n\n      <Grid container spacing={2} sx={{ mt: 4, mb: 4 }}>\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={countries}\n            value={country}\n            onChange={(_, newValue) => setCountry(newValue)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Country\"\n                variant=\"outlined\"\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    borderRadius: '30px',\n                    backgroundColor: '#edf2f4',\n                  }\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={years}\n            value={year}\n            onChange={(_, newValue) => setYear(newValue)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Year\"\n                variant=\"outlined\"\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    borderRadius: '30px',\n                    backgroundColor: '#edf2f4',\n                  }\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n          <Autocomplete\n            options={disasters}\n            value={disasterType}\n            onChange={(_, newValue) => setDisasterType(newValue)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Disaster Type\"\n                variant=\"outlined\"\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    borderRadius: '30px',\n                    backgroundColor: '#edf2f4',\n                  }\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={3}>\n          <Button\n            variant=\"contained\"\n            onClick={handleSearch}\n            disabled={!country || !year || !disasterType || loading}\n            sx={{\n              borderRadius: '30px',\n              backgroundColor: '#ef233c',\n              color: '#edf2f4',\n              padding: '15px 30px',\n              '&:hover': {\n                backgroundColor: '#d90429',\n              },\n              '&:disabled': {\n                backgroundColor: '#8d99ae',\n              },\n            }}\n          >\n            {loading ? 'Searching...' : 'Search'}\n          </Button>\n        </Grid>\n      </Grid>\n\n      {error && (\n        <Typography color=\"error\" sx={{ mt: 2, mb: 2 }}>\n          {error}\n        </Typography>\n      )}\n\n      {searchResults && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <DisasterMap country={country} geoJsonData={geoJsonData} />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <StatsPanel data={searchResults} />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <HistoricalTrends data={searchResults} />\n          </Grid>\n        </Grid>\n      )}\n\n      <footer style={{\n        backgroundColor: \"#2b2d42\",\n        color: \"#edf2f4\",\n        padding: \"20px\",\n        marginTop: \"40px\",\n        textAlign: \"center\"\n      }}>\n        <Typography variant=\"body2\">\n          Contact: info@doomindex.com | © 2024 DoomIndex. All Rights Reserved.\n        </Typography>\n      </footer>\n    </Container>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}